/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
/** @type {?} */
var THF_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
/** @type {?} */
var THF_AVATAR_SIZE_DEFAULT = 'md';
/**
 * \@description
 *
 * O componente `thf-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `thf-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
var ThfAvatarBaseComponent = /** @class */ (function () {
    function ThfAvatarBaseComponent() {
        this._size = 'md';
    }
    Object.defineProperty(ThfAvatarBaseComponent.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        /**
         * @optional
         *
         * @description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * @default `md`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * \@default `md`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._size = THF_AVATAR_SIZES.includes(value) ? value : THF_AVATAR_SIZE_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    ThfAvatarBaseComponent.propDecorators = {
        src: [{ type: Input, args: ['t-src',] }],
        size: [{ type: Input, args: ['t-size',] }]
    };
    return ThfAvatarBaseComponent;
}());
export { ThfAvatarBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfAvatarBaseComponent.prototype._size;
    /**
     * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)
     * ou um servidor externo (`https://thf.totvs.com.br/assets/images/logo-black-small.png`).
     * @type {?}
     */
    ThfAvatarBaseComponent.prototype.src;
}
