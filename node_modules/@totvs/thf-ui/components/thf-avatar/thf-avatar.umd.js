(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :
	(factory((global['thf-avatar'] = {}),global.core,global.common));
}(this, (function (exports,core,common) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var THF_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
/** @type {?} */
var THF_AVATAR_SIZE_DEFAULT = 'md';
/**
 * \@description
 *
 * O componente `thf-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `thf-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
var ThfAvatarBaseComponent = /** @class */ (function () {
    function ThfAvatarBaseComponent() {
        this._size = 'md';
    }
    Object.defineProperty(ThfAvatarBaseComponent.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        /**
         * @optional
         *
         * @description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * @default `md`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * \@default `md`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._size = THF_AVATAR_SIZES.includes(value) ? value : THF_AVATAR_SIZE_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    ThfAvatarBaseComponent.propDecorators = {
        src: [{ type: core.Input, args: ['t-src',] }],
        size: [{ type: core.Input, args: ['t-size',] }]
    };
    return ThfAvatarBaseComponent;
}());

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Imagem default caso não seja informada a propriedade 't-src' ou houver algum erro na requisição da mesma.
/** @type {?} */
var THF_AVATAR_DEFAULT_SRC = './assets/images/totvs-avatar-default.svg';
/**
 * \@docsExtends ThfAvatarBaseComponent
 *
 * \@example
 *
 * <example name="thf-avatar-basic" title="Totvs Avatar Basic" >
 *  <file name="sample-thf-avatar-basic/sample-thf-avatar-basic.component.html"> </file>
 *  <file name="sample-thf-avatar-basic/sample-thf-avatar-basic.component.ts"> </file>
 *  <file name="sample-thf-avatar-basic/sample-thf-avatar-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-avatar-basic/sample-thf-avatar-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-avatar-labs" title="Totvs Avatar Labs" >
 *  <file name="sample-thf-avatar-labs/sample-thf-avatar-labs.component.html"> </file>
 *  <file name="sample-thf-avatar-labs/sample-thf-avatar-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-avatar-business-card" title="Totvs Avatar - Business Card" >
 *  <file name="sample-thf-avatar-business-card/sample-thf-avatar-business-card.component.html"> </file>
 *  <file name="sample-thf-avatar-business-card/sample-thf-avatar-business-card.component.ts"> </file>
 * </example>
 */
var ThfAvatarComponent = /** @class */ (function (_super) {
    __extends(ThfAvatarComponent, _super);
    function ThfAvatarComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    ThfAvatarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.src) {
            this.src = THF_AVATAR_DEFAULT_SRC;
        }
    };
    /**
     * @return {?}
     */
    ThfAvatarComponent.prototype.onError = /**
     * @return {?}
     */
    function () {
        this.src = THF_AVATAR_DEFAULT_SRC;
    };
    ThfAvatarComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-avatar', template: "<div class=\"thf-avatar thf-avatar-{{ size }}\"> <img class=\"thf-avatar-image\" [src]=\"src\" alt=\"\" (error)=\"onError()\"> </div> "
                },] },
    ];
    return ThfAvatarComponent;
}(ThfAvatarBaseComponent));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@description
 *
 * Módulo do componente thf-avatar.
 */
var ThfAvatarModule = /** @class */ (function () {
    function ThfAvatarModule() {
    }
    ThfAvatarModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule
                    ],
                    declarations: [
                        ThfAvatarComponent
                    ],
                    exports: [
                        ThfAvatarComponent
                    ]
                },] },
    ];
    return ThfAvatarModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

exports.ThfAvatarComponent = ThfAvatarComponent;
exports.ThfAvatarModule = ThfAvatarModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
