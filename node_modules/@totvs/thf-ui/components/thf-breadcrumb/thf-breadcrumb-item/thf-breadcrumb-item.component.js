/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que renderiza cada item do thf-breadcrumb.
 */
var ThfBreadcrumbItemComponent = /** @class */ (function () {
    function ThfBreadcrumbItemComponent() {
        // Especifica se item Ã© o link ativo.
        this.itemActive = false;
    }
    ThfBreadcrumbItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-breadcrumb-item', template: "<li *ngIf=\"!itemActive\" [class.thf-breadcrumb-item]=\"link || action\" [class.thf-breadcrumb-item-unclickable]=\"!link && !action\"> <a *ngIf=\"link\" [routerLink]=\"link\"> <label class=\"thf-breadcrumb-label\">{{ label }}</label> <div class=\"thf-breadcrumb-arrow\"></div> </a> <a *ngIf=\"!link && action\" (click)=\"action(label)\"> <label class=\"thf-breadcrumb-label\">{{ label }}</label> <div class=\"thf-breadcrumb-arrow\"></div> </a> <a *ngIf=\"!link && !action\"> <label class=\"thf-breadcrumb-label\">{{ label }}</label> <div class=\"thf-breadcrumb-arrow\"></div> </a> </li> <li *ngIf=\"itemActive\" class=\"thf-breadcrumb-item-unclickable\"> <label class=\"thf-breadcrumb-label\">{{ label }}</label> </li> "
                },] },
    ];
    ThfBreadcrumbItemComponent.propDecorators = {
        action: [{ type: Input, args: ['t-action',] }],
        label: [{ type: Input, args: ['t-label',] }],
        link: [{ type: Input, args: ['t-link',] }],
        itemActive: [{ type: Input, args: ['t-item-active',] }]
    };
    return ThfBreadcrumbItemComponent;
}());
export { ThfBreadcrumbItemComponent };
if (false) {
    /** @type {?} */
    ThfBreadcrumbItemComponent.prototype.action;
    /** @type {?} */
    ThfBreadcrumbItemComponent.prototype.label;
    /** @type {?} */
    ThfBreadcrumbItemComponent.prototype.link;
    /** @type {?} */
    ThfBreadcrumbItemComponent.prototype.itemActive;
}
