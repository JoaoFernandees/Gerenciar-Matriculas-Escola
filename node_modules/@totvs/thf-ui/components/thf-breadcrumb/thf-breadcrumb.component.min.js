var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();import{Component,ElementRef,IterableDiffers,Renderer2,ViewChild}from"@angular/core";import{ThfBreadcrumbBaseComponent}from"./thf-breadcrumb-base.component";var ThfBreadcrumbComponent=function(e){function t(t,i,r){var o=e.call(this)||this;return o.element=i,o.renderer=r,o.showDropdown=!1,o.showDropdownToggle=!1,o._breadcrumbItemsLenght=0,o.calculatedElement=!1,o.hiddenWithoutResize=!1,o.initialized=!1,o.wasClickedonDropdown=function(e){o.checkClickOutElement(e,o.dropdownIcon)&&(o.showDropdown=!1,o.removeClickoutListener())},o.differ=t.find([]).create(null),o}return __extends(t,e),t.prototype.ngAfterViewInit=function(){this.initialized=!0,this.initializeResizeListener()},t.prototype.ngDoCheck=function(){this.breadcrumbElement.nativeElement.offsetWidth&&!this.calculatedElement&&this.initialized&&this.initBreadcrumbSize(),this.hiddenWithoutResize&&(this.debounceResize(),this.hiddenWithoutResize=!1),this.checkChangeOnItems()},t.prototype.ngOnDestroy=function(){this.removeClickoutListener(),this.removeResizeListener()},t.prototype.toggleDropdown=function(){this.showDropdown=!this.showDropdown,this.initializeClickoutListener()},t.prototype.checkClickOutElement=function(e,t){return t&&!t.nativeElement.contains(e.target)},t.prototype.checkChangeOnItems=function(){this.differ&&(this.differ.diff(this.items)&&(this.calcBreadcrumbItemsWidth(),this.calculatedElement=!1))},t.prototype.calcBreadcrumb=function(){var e=this.getBreadcrumbFavoriteWidth();this.getBreadcrumbWidth(e)<=this._breadcrumbItemsLenght?this.enableBreadcrumbResponsive():this.disableBreadcrumbResponsive()},t.prototype.getBreadcrumbFavoriteWidth=function(){return this.favoriteService?this.element.nativeElement.querySelector(".thf-breadcrumb-favorite").offsetWidth+20:0},t.prototype.getBreadcrumbWidth=function(e){return this.element.nativeElement.querySelector(".thf-breadcrumb").offsetWidth-e},t.prototype.calcBreadcrumbItemsWidth=function(){var e=this.element.nativeElement.querySelectorAll(".thf-breadcrumb-item, .thf-breadcrumb-item-unclickable");this._breadcrumbItemsLenght=Array.from(e).map(function(e){return e.offsetWidth}).reduce(function(e,t){return e+t},16)},t.prototype.enableBreadcrumbResponsive=function(){this.showDropdownToggle=!0,this.itemsView=this.items.slice(-2),this.dropdownItems=this.items.slice(0,-2).reverse()},t.prototype.disableBreadcrumbResponsive=function(){this.showDropdownToggle=!1,this.itemsView=[].concat(this.items),this.showDropdown=!1},t.prototype.debounceResize=function(){var e=this;clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(function(){e.calculatedElement&&!e.hiddenWithoutResize&&0===e.breadcrumbElement.nativeElement.offsetWidth?e.hiddenWithoutResize=!0:e.calcBreadcrumb()},50)},t.prototype.initBreadcrumbSize=function(){this.calcBreadcrumbItemsWidth(),this.calcBreadcrumb(),this.calculatedElement=!0},t.prototype.initializeClickoutListener=function(){this.clickoutListener=this.renderer.listen("document","click",this.wasClickedonDropdown)},t.prototype.initializeResizeListener=function(){var e=this;this.resizeListener=this.renderer.listen("window","resize",function(t){e.debounceResize()})},t.prototype.removeClickoutListener=function(){this.clickoutListener&&this.clickoutListener()},t.prototype.removeResizeListener=function(){this.resizeListener()},t.decorators=[{type:Component,args:[{selector:"thf-breadcrumb",template:'<div class="thf-breadcrumb" #breadcrumb> <ul class="thf-breadcrumb-items"> <li #dropdownIcon *ngIf="showDropdownToggle" class="thf-breadcrumb-item thf-clickable" (click)="toggleDropdown()"> <span class="thf-breadcrumb-icon-more thf-icon thf-icon-more"></span> <div class="thf-breadcrumb-arrow"></div> </li> <div *ngFor="let item of itemsView, let itemIndex = index;"> <thf-breadcrumb-item [t-action]="item.action" [t-label]="item.label" [t-link]="item.link" [t-item-active]="itemIndex === (itemsView.length - 1)"> </thf-breadcrumb-item> </div> </ul> <thf-breadcrumb-favorite *ngIf="favoriteService" [t-favorite-service]="favoriteService" [t-item-active]="items[items.length - 1]" [t-params-service]="paramsService"> </thf-breadcrumb-favorite> <thf-breadcrumb-dropdown *ngIf="showDropdown" [t-items]="dropdownItems"> </thf-breadcrumb-dropdown> </div> '}]}],t.ctorParameters=function(){return[{type:IterableDiffers},{type:ElementRef},{type:Renderer2}]},t.propDecorators={breadcrumbElement:[{type:ViewChild,args:["breadcrumb",{read:ElementRef}]}],dropdownIcon:[{type:ViewChild,args:["dropdownIcon",{read:ElementRef}]}]},t}(ThfBreadcrumbBaseComponent);export{ThfBreadcrumbComponent};