import{Input}from"@angular/core";import{convertToBoolean}from"../../utils/util";import{ThfButtonGroupToggle}from"./thf-button-group-toggle.enum";var THF_TOGGLE_TYPE_DEFAULT="none",ThfButtonGroupBaseComponent=function(){function t(){this._small=!1,this._toggle=THF_TOGGLE_TYPE_DEFAULT,this.buttons=[]}return Object.defineProperty(t.prototype,"small",{get:function(){return this._small},set:function(t){this._small=""===t||convertToBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"toggle",{get:function(){return this._toggle},set:function(t){this._toggle=Object.values(ThfButtonGroupToggle).includes(t)?t:THF_TOGGLE_TYPE_DEFAULT,this.checkSelecteds(this._toggle)},enumerable:!0,configurable:!0}),t.prototype.onButtonClick=function(t,e){this.toggle===ThfButtonGroupToggle.Single?this.buttons.forEach(function(o,n){return o.selected=n===e&&!t.selected}):this.toggle===ThfButtonGroupToggle.Multiple&&(t.selected=!t.selected)},t.prototype.checkSelecteds=function(t){if(t===ThfButtonGroupToggle.None)this.deselectAllButtons();else if(t===ThfButtonGroupToggle.Single){this.buttons.filter(function(t){return t.selected}).length>1&&this.deselectAllButtons()}},t.prototype.deselectAllButtons=function(){this.buttons.forEach(function(t){return t.selected=!1})},t.propDecorators={buttons:[{type:Input,args:["t-buttons"]}],small:[{type:Input,args:["t-small"]}],toggle:[{type:Input,args:["t-toggle"]}]},t}();export{ThfButtonGroupBaseComponent};