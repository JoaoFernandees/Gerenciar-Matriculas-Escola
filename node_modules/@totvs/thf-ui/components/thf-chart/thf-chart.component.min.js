var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();import{ChangeDetectorRef,Component,ComponentFactoryResolver,ElementRef,HostListener,IterableDiffers,ViewChild,ViewContainerRef}from"@angular/core";import{Subject}from"rxjs";import{ThfChartBaseComponent}from"./thf-chart-base.component";import{ThfChartColors}from"./thf-chart-colors.constant";import{ThfChartPieComponent}from"./thf-chart-types/thf-chart-pie/thf-chart-pie.component";import{ThfChartType}from"./enums/thf-chart-type.enum";var ThfChartComponent=function(e){function t(t,r,n){var o,i=e.call(this)||this;return i.changeDetector=t,i.componentFactoryResolver=r,i.differs=n,i.calculatedElement=!1,i.initialized=!1,i.windowResizeListener=new Subject,i.mappings=((o={})[ThfChartType.Pie]=ThfChartPieComponent,o),i.onResize=function(){return i.windowResizeListener.next()},i.differ=i.differs.find([]).create(null),i}return __extends(t,e),t.prototype.ngAfterViewInit=function(){this.initialized=!0},t.prototype.ngDoCheck=function(){this.chartWrapper.nativeElement.offsetWidth&&!this.calculatedElement&&this.initialized&&(this.calculatedElement=!0,this.getSeriesColor(),this.dynamicComponentSetting()),this.checkingForSerieChanges()},t.prototype.ngOnDestroy=function(){this.removeWindowResizeListener()},t.prototype.ngOnInit=function(){this.getSeriesColor()},t.prototype.rebuildComponent=function(){this.componentRef&&(this.componentRef.destroy(),this.dynamicComponentSetting())},t.prototype.checkingForSerieChanges=function(){this.componentRef&&this.differ&&(this.differ.diff(this.series)&&(this.getSeriesColor(),this.rebuildComponent()))},t.prototype.createComponent=function(){var e=this.getComponentType(this.type),t=this.componentFactoryResolver.resolveComponentFactory(e);this.componentRef=this.chartContainer.createComponent(t);var r=this.componentRef.instance;return this.setChartProperties(r),r},t.prototype.dynamicComponentSetting=function(){var e=this.createComponent();this.setResizeListenerSubscribe(e),this.changeDetector.detectChanges(),this.setClickSubscribe(e),this.setHoverSubscribe(e)},t.prototype.getComponentType=function(e){return this.mappings[e]},t.prototype.getSeriesColor=function(){var e=ThfChartColors.length-1;if(!this.series)return this.colors=ThfChartColors[e];var t=this.series.length-1;if(t>e){for(var r=ThfChartColors[e],n=t/e,o=1;o<=n;o++)r=r.concat(ThfChartColors[e]);return this.colors=r}return this.colors=ThfChartColors[t]},t.prototype.removeWindowResizeListener=function(){this.onResize&&(this.onResize=function(){})},t.prototype.setChartProperties=function(e){e.chartHeader=this.chartHeader.nativeElement.offsetHeight,e.chartLegend=this.chartLegend.nativeElement.offsetHeight,e.chartWrapper=this.chartWrapper.nativeElement.offsetWidth,e.colors=this.colors,e.height=this.height,e.series=this.series||[]},t.prototype.setClickSubscribe=function(e){var t=this;e.onSerieClick.subscribe(function(e){t.onSeriesClick(e)})},t.prototype.setHoverSubscribe=function(e){var t=this;e.onSerieHover.subscribe(function(e){t.onSeriesHover(e)})},t.prototype.setResizeListenerSubscribe=function(e){var t=this;this.windowResizeListener.subscribe(function(){e.chartHeader=t.chartHeader.nativeElement.offsetHeight,e.chartLegend=t.chartLegend.nativeElement.offsetHeight,e.chartWrapper=t.chartWrapper.nativeElement.offsetWidth})},t.decorators=[{type:Component,args:[{selector:"thf-chart",template:'<div #chartWrapper class="thf-chart-wrapper"> <div #chartHeader class="thf-chart-header"> <div class="thf-chart-title">{{ title }}</div> </div> <ng-template #chartContainer></ng-template> <div #chartLegend class="thf-chart-legend"> <div class="thf-chart-legend-container"> <div class="thf-chart-legend-item" *ngFor="let serie of series; let i = index"> <div class="thf-chart-legend-square" [style.background]="colors[i]"></div> <span class="thf-chart-legend-text">{{ serie.category }}</span> </div> </div> </div> </div> '}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef},{type:ComponentFactoryResolver},{type:IterableDiffers}]},t.propDecorators={chartContainer:[{type:ViewChild,args:["chartContainer",{read:ViewContainerRef}]}],chartHeader:[{type:ViewChild,args:["chartHeader"]}],chartLegend:[{type:ViewChild,args:["chartLegend"]}],chartWrapper:[{type:ViewChild,args:["chartWrapper"]}],onResize:[{type:HostListener,args:["window:resize",["$event"]]}]},t}(ThfChartBaseComponent);export{ThfChartComponent};