/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean, convertToInt } from '../../utils/util';
/**
 * \@description
 *
 * O `thf-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais podem ser
 * desabilitados. Além disso, sua altura acompanha a quantidade do conteúdo, porém pode ser fixada. Para controlar sua
 * largura, utilize o [Grid System](/guides/grid-system), assim possibilitando o tratamento para diferentes resoluções.
 */
var ThfContainerBaseComponent = /** @class */ (function () {
    function ThfContainerBaseComponent() {
        this._noPadding = false;
        this._noShadow = false;
    }
    Object.defineProperty(ThfContainerBaseComponent.prototype, "height", {
        get: /**
         * @return {?}
         */
        function () {
            return this._height;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define a altura do `thf-container`.
         *
         * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define a altura do `thf-container`.
         *
         * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._height = convertToInt(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfContainerBaseComponent.prototype, "noPadding", {
        get: /**
         * @return {?}
         */
        function () {
            return this._noPadding;
        },
        /**
         * @optional
         *
         * @description
         *
         * Desabilita o espaçamento interno do `thf-container`.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Desabilita o espaçamento interno do `thf-container`.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._noPadding = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfContainerBaseComponent.prototype, "noShadow", {
        get: /**
         * @return {?}
         */
        function () {
            return this._noShadow;
        },
        /**
         * @optional
         *
         * @description
         *
         * Desabilita o sombreamento em torno do `thf-container`.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Desabilita o sombreamento em torno do `thf-container`.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._noShadow = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    ThfContainerBaseComponent.propDecorators = {
        height: [{ type: Input, args: ['t-height',] }],
        noPadding: [{ type: Input, args: ['t-no-padding',] }],
        noShadow: [{ type: Input, args: ['t-no-shadow',] }]
    };
    return ThfContainerBaseComponent;
}());
export { ThfContainerBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._height;
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._noPadding;
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._noShadow;
}
