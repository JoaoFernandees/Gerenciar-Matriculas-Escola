var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}();import{Component,IterableDiffers}from"@angular/core";import{ThfDisclaimerGroupBaseComponent}from"./thf-disclaimer-group-base.component";var ThfDisclaimerGroupComponent=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.decorators=[{type:Component,args:[{selector:"thf-disclaimer-group",template:'<div class="thf-disclaimer-group" *ngIf="disclaimers.length > 0" > <div class="thf-disclaimer-group-title">{{ title }}</div> <thf-disclaimer-remove *ngIf="isRemoveAll()" class="thf-disclaimer-group-padding" [t-label]="literals.removeAll" (keydown)="onKeyPress($event)" (t-remove-all-action)="removeAllItems()"> </thf-disclaimer-remove> <thf-disclaimer *ngFor="let disclaimer of disclaimers" class="thf-disclaimer-group-padding" [t-hide-close]="disclaimer.hideClose" [t-label]="disclaimer.label" [t-property]="disclaimer.property" [t-value]="disclaimer.value" (t-close-action)="closeItem(disclaimer)"> </thf-disclaimer> </div> '}]}],t.ctorParameters=function(){return[{type:IterableDiffers}]},t}(ThfDisclaimerGroupBaseComponent);export{ThfDisclaimerGroupComponent};