var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { isKeyCodeEnter } from '../../utils/util';
import { ThfDisclaimerBaseComponent } from './thf-disclaimer-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfDisclaimerBaseComponent
 *
 * \@examplePrivate
 *
 * <example-private name="thf-disclaimer" title="Totvs Disclaimer">
 *   <file name="sample-thf-disclaimer.component.html"> </file>
 *   <file name="sample-thf-disclaimer.component.ts"> </file>
 * </example-private>
 */
var ThfDisclaimerComponent = /** @class */ (function (_super) {
    __extends(ThfDisclaimerComponent, _super);
    function ThfDisclaimerComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    ThfDisclaimerComponent.prototype.onKeyPress = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (isKeyCodeEnter(event)) {
            this.close();
        }
    };
    ThfDisclaimerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-disclaimer', template: "<div *ngIf=\"showDisclaimer === true\" class=\"thf-disclaimer\"> <span class=\"thf-disclaimer-label\" [class.thf-disclaimer-label-danger]=\"type === 'danger'\"> {{getLabel()}} </span> <span *ngIf=\"hideClose === false\" class=\"thf-disclaimer-remove thf-icon thf-icon-close thf-clickable\" tabindex=\"0\" [class.thf-disclaimer-remove-danger]=\"type === 'danger'\" (click)=\"close()\" (keydown)=\"onKeyPress($event)\"> </span> </div> "
                },] },
    ];
    return ThfDisclaimerComponent;
}(ThfDisclaimerBaseComponent));
export { ThfDisclaimerComponent };
