var __extends=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();import{Component}from"@angular/core";import{isKeyCodeEnter}from"../../utils/util";import{ThfDisclaimerBaseComponent}from"./thf-disclaimer-base.component";var ThfDisclaimerComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.onKeyPress=function(e){isKeyCodeEnter(e)&&this.close()},t.decorators=[{type:Component,args:[{selector:"thf-disclaimer",template:'<div *ngIf="showDisclaimer === true" class="thf-disclaimer"> <span class="thf-disclaimer-label" [class.thf-disclaimer-label-danger]="type === \'danger\'"> {{getLabel()}} </span> <span *ngIf="hideClose === false" class="thf-disclaimer-remove thf-icon thf-icon-close thf-clickable" tabindex="0" [class.thf-disclaimer-remove-danger]="type === \'danger\'" (click)="close()" (keydown)="onKeyPress($event)"> </span> </div> '}]}],t}(ThfDisclaimerBaseComponent);export{ThfDisclaimerComponent};