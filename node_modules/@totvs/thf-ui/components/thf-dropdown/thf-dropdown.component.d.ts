import { ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
/**
 * @description
 *
 * O componente `thf-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.
 *
 * > Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`
 * no módulo principal para o correto funcionamento deste componente:
 *
 * ```
 * import { RouterModule } from '@angular/router';
 *
 * @NgModule({
 *   imports: [
 *     ...
 *     RouterModule.forRoot([]),
 *     ThfModule
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   exports: [],
 *   providers: [],
 *   bootstrap: [
 *     AppComponent
 *   ]
 * })
 * export class AppModule { }
 * ```
 * > Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando
 * [/Configurando as rotas do thf-menu](/guides/getting-started).
 *
 * @example
 *
 * <example name="thf-dropdown-basic" title="Totvs Dropdown Basic" >
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.html"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.ts"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-dropdown-labs" title="Totvs Dropdown Labs" >
 *  <file name="sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.html"> </file>
 *  <file name="sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dropdown-social-network" title="Totvs Dropdown - Social Network" >
 *  <file name="sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.html"> </file>
 *  <file name="sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.ts"> </file>
 * </example>
 */
export declare class ThfDropdownComponent {
    private _router;
    private renderer;
    private open;
    private _parentRef;
    icon: string;
    protected clickoutListener: () => void;
    /** Definido um *array* de objetos que implementam a interface `ThfDropdownAction`. */
    actions: Array<{}>;
    /** Desabilita o `dropdown` na página. */
    disabled?: string;
    /** Adiciona um rótulo ao `dropdown`. */
    label: string;
    dropdownRef: ElementRef;
    constructor(_router: Router, renderer: Renderer2, _view: ViewContainerRef);
    onClick(item: any): void;
    toggleDropdown(): void;
    private _callAction;
    private _callActionOfContext;
    private checkClickArea;
    private destroyListener;
    private hideDropdown;
    private initializeListener;
    private _isTypeof;
    private showActionsList;
    private showDropdown;
    private wasClickedOnDropdown;
}
