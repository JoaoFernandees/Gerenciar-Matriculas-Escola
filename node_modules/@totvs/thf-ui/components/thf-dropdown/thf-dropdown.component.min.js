import{Component,ElementRef,Input,Renderer2,ViewChild,ViewContainerRef}from"@angular/core";import{Router}from"@angular/router";var ThfDropdownComponent=function(){function t(t,o,n){this._router=t,this.renderer=o,this.open=!1,this.icon="thf-icon-arrow-down",this._parentRef=n._view.component}return t.prototype.onClick=function(t){if(t.url){var o=t.url;/(http(s?))\:\/\//gi.test(o)?window.open(o,"_blank"):this._router.navigate([o])}else t.action&&this._callAction(t.action)},t.prototype.toggleDropdown=function(){this.dropdownRef&&!this.open?this.showDropdown():this.hideDropdown()},t.prototype._callAction=function(t){this._callActionOfContext(t,this._parentRef)},t.prototype._callActionOfContext=function(t,o){this._isTypeof(t,"function")?t.call(o):o[t]()},t.prototype.checkClickArea=function(t){return this.dropdownRef&&this.dropdownRef.nativeElement.contains(t.target)},t.prototype.destroyListener=function(){this.clickoutListener()},t.prototype.hideDropdown=function(){this.icon="thf-icon-arrow-down",this.destroyListener(),this.showActionsList(),this.open=!1},t.prototype.initializeListener=function(){var t=this;this.clickoutListener=this.renderer.listen("document","click",function(o){t.wasClickedOnDropdown(o)})},t.prototype._isTypeof=function(t,o){return typeof t===o},t.prototype.showActionsList=function(){this.actions&&this.actions.length&&this.dropdownRef.nativeElement.classList.toggle("t-show")},t.prototype.showDropdown=function(){this.icon="thf-icon-arrow-up",this.initializeListener(),this.showActionsList(),this.open=!0},t.prototype.wasClickedOnDropdown=function(t){this.checkClickArea(t)||this.hideDropdown()},t.decorators=[{type:Component,args:[{selector:"thf-dropdown",template:'<div #dropdownRef class="dropdown" (click)="toggleDropdown()"> <div class="button-dropdown" [ngClass]="{\'disabled\' : disabled}"> {{ label }} <div class="hidden-xs icon-dropdown thf-icon {{icon}}"></div> </div> <ul class="dropdown-content"> <li *ngFor="let action of actions"> <a (click)="onClick(action)" [ngClass]="{\'disabled\' : action.disabled}">{{ action?.label }}</a> </li> </ul> </div> '}]}],t.ctorParameters=function(){return[{type:Router},{type:Renderer2},{type:ViewContainerRef}]},t.propDecorators={actions:[{type:Input,args:["t-actions"]}],disabled:[{type:Input,args:["t-disabled"]}],label:[{type:Input,args:["t-label"]}],dropdownRef:[{type:ViewChild,args:["dropdownRef",{read:ElementRef}]}]},t}();export{ThfDropdownComponent};