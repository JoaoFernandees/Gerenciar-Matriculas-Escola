!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/router"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/router","@angular/common"],t):t(o["thf-dropdown"]={},o.core,o.router,o.common)}(this,function(o,t,e,n){"use strict";var i=function(){function o(o,t,e){this._router=o,this.renderer=t,this.open=!1,this.icon="thf-icon-arrow-down",this._parentRef=e._view.component}return o.prototype.onClick=function(o){if(o.url){var t=o.url;/(http(s?))\:\/\//gi.test(t)?window.open(t,"_blank"):this._router.navigate([t])}else o.action&&this._callAction(o.action)},o.prototype.toggleDropdown=function(){this.dropdownRef&&!this.open?this.showDropdown():this.hideDropdown()},o.prototype._callAction=function(o){this._callActionOfContext(o,this._parentRef)},o.prototype._callActionOfContext=function(o,t){this._isTypeof(o,"function")?o.call(t):t[o]()},o.prototype.checkClickArea=function(o){return this.dropdownRef&&this.dropdownRef.nativeElement.contains(o.target)},o.prototype.destroyListener=function(){this.clickoutListener()},o.prototype.hideDropdown=function(){this.icon="thf-icon-arrow-down",this.destroyListener(),this.showActionsList(),this.open=!1},o.prototype.initializeListener=function(){var o=this;this.clickoutListener=this.renderer.listen("document","click",function(t){o.wasClickedOnDropdown(t)})},o.prototype._isTypeof=function(o,t){return typeof o===t},o.prototype.showActionsList=function(){this.actions&&this.actions.length&&this.dropdownRef.nativeElement.classList.toggle("t-show")},o.prototype.showDropdown=function(){this.icon="thf-icon-arrow-up",this.initializeListener(),this.showActionsList(),this.open=!0},o.prototype.wasClickedOnDropdown=function(o){this.checkClickArea(o)||this.hideDropdown()},o.decorators=[{type:t.Component,args:[{selector:"thf-dropdown",template:'<div #dropdownRef class="dropdown" (click)="toggleDropdown()"> <div class="button-dropdown" [ngClass]="{\'disabled\' : disabled}"> {{ label }} <div class="hidden-xs icon-dropdown thf-icon {{icon}}"></div> </div> <ul class="dropdown-content"> <li *ngFor="let action of actions"> <a (click)="onClick(action)" [ngClass]="{\'disabled\' : action.disabled}">{{ action?.label }}</a> </li> </ul> </div> '}]}],o.ctorParameters=function(){return[{type:e.Router},{type:t.Renderer2},{type:t.ViewContainerRef}]},o.propDecorators={actions:[{type:t.Input,args:["t-actions"]}],disabled:[{type:t.Input,args:["t-disabled"]}],label:[{type:t.Input,args:["t-label"]}],dropdownRef:[{type:t.ViewChild,args:["dropdownRef",{read:t.ElementRef}]}]},o}(),r=function(){function o(){}return o.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule],declarations:[i],exports:[i]}]}],o}();o.ThfDropdownComponent=i,o.ThfDropdownModule=r,Object.defineProperty(o,"__esModule",{value:!0})});