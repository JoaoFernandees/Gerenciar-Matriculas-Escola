var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ThfDynamicFormBaseComponent } from './thf-dynamic-form-base.component';
/**
 * \@docsExtends ThfDynamicFormBaseComponent
 *
 * \@example
 *
 * <example name="thf-dynamic-form-basic" title="Totvs Dynamic Form Basic">
 *  <file name="sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.html"> </file>
 *  <file name="sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dynamic-form-register" title="Totvs Dynamic Form - Register">
 *  <file name="sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.html"> </file>
 *  <file name="sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.ts"> </file>
 * </example>
 */
var ThfDynamicFormComponent = /** @class */ (function (_super) {
    __extends(ThfDynamicFormComponent, _super);
    function ThfDynamicFormComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ThfDynamicFormComponent.prototype, "form", {
        get: /**
         * @return {?}
         */
        function () {
            return this._form || (/** @type {?} */ ({}));
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError
            setTimeout(function () {
                _this._form = value;
                _this.emitForm();
            });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @return {?}
     */
    ThfDynamicFormComponent.prototype.emitForm = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.groupForm && this.formOutput.observers.length) {
            this.formOutput.emit(this.form);
        }
    };
    ThfDynamicFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-dynamic-form', template: " <ng-container *ngIf=\"groupForm; then reuseFormTemplate; else uniqueFormTemplate\"></ng-container> <ng-template #reuseFormTemplate> <thf-dynamic-form-fields [t-fields]=\"fields\" [t-value]=\"value\"></thf-dynamic-form-fields> </ng-template> <ng-template #uniqueFormTemplate> <form #dynamicForm=\"ngForm\"> <thf-dynamic-form-fields [t-fields]=\"fields\" [t-value]=\"value\"></thf-dynamic-form-fields> </form> </ng-template> "
                },] },
    ];
    ThfDynamicFormComponent.propDecorators = {
        form: [{ type: ViewChild, args: ['dynamicForm',] }]
    };
    return ThfDynamicFormComponent;
}(ThfDynamicFormBaseComponent));
export { ThfDynamicFormComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfDynamicFormComponent.prototype._form;
}
