var __extends=this&&this.__extends||function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}();import{Component,ViewChild}from"@angular/core";import{NgForm}from"@angular/forms";import{ThfDynamicFormBaseComponent}from"./thf-dynamic-form-base.component";var ThfDynamicFormComponent=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),Object.defineProperty(e.prototype,"form",{get:function(){return this._form||{}},set:function(t){var e=this;setTimeout(function(){e._form=t,e.emitForm()})},enumerable:!0,configurable:!0}),e.prototype.emitForm=function(){!this.groupForm&&this.formOutput.observers.length&&this.formOutput.emit(this.form)},e.decorators=[{type:Component,args:[{selector:"thf-dynamic-form",template:' <ng-container *ngIf="groupForm; then reuseFormTemplate; else uniqueFormTemplate"></ng-container> <ng-template #reuseFormTemplate> <thf-dynamic-form-fields [t-fields]="fields" [t-value]="value"></thf-dynamic-form-fields> </ng-template> <ng-template #uniqueFormTemplate> <form #dynamicForm="ngForm"> <thf-dynamic-form-fields [t-fields]="fields" [t-value]="value"></thf-dynamic-form-fields> </form> </ng-template> '}]}],e.propDecorators={form:[{type:ViewChild,args:["dynamicForm"]}]},e}(ThfDynamicFormBaseComponent);export{ThfDynamicFormComponent};