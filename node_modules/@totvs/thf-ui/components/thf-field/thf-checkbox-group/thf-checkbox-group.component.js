var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfCheckboxGroupBaseComponent } from './thf-checkbox-group-base.component';
/**
 * \@docsExtends ThfCheckboxGroupBaseComponent
 *
 * \@example
 *
 * <example name="thf-checkbox-group-basic" title="Totvs Checkbox Group Basic">
 *  <file name="sample-thf-checkbox-group-basic/sample-thf-checkbox-group-basic.component.html"> </file>
 *  <file name="sample-thf-checkbox-group-basic/sample-thf-checkbox-group-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-checkbox-group-labs" title="Totvs Checkbox Group Labs">
 *  <file name="sample-thf-checkbox-group-labs/sample-thf-checkbox-group-labs.component.html"> </file>
 *  <file name="sample-thf-checkbox-group-labs/sample-thf-checkbox-group-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-checkbox-group-password-policy" title="Totvs Checkbox Group â€“ Security policy">
 *  <file name="sample-thf-checkbox-group-password-policy/sample-thf-checkbox-group-password-policy.component.html"> </file>
 *  <file name="sample-thf-checkbox-group-password-policy/sample-thf-checkbox-group-password-policy.component.ts"> </file>
 * </example>
 */
var ThfCheckboxGroupComponent = /** @class */ (function (_super) {
    __extends(ThfCheckboxGroupComponent, _super);
    function ThfCheckboxGroupComponent(changeDetector) {
        var _this = _super.call(this) || this;
        _this.changeDetector = changeDetector;
        return _this;
    }
    /**
     * @return {?}
     */
    ThfCheckboxGroupComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.changeDetector.detectChanges();
    };
    /**
     * @param {?} event
     * @param {?} option
     * @return {?}
     */
    ThfCheckboxGroupComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @param {?} option
     * @return {?}
     */
    function (event, option) {
        /** @type {?} */
        var spaceBar = 32;
        if (event.which === spaceBar || event.keyCode === spaceBar) {
            this.checkOption(option);
            event.preventDefault();
        }
    };
    ThfCheckboxGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-checkbox-group', template: "<thf-field-container [t-help]=\"help\" [t-label]=\"label\" [t-opcional]=\"!required\"> <div class=\"thf-field-container-content thf-checkbox-group-content\"> <div class=\"thf-row thf-pt-1 thf-pb-1\"> <div *ngFor=\"let option of options; let i = index\" class=\"thf-checkbox-group-item thf-md-{{ mdColumns }} thf-lg-{{ columns }}\" [class.thf-checkbox-group-item-disabled]=\"option.disabled || disabled\"> <input class=\"thf-input thf-checkbox-group-input\" type=\"checkbox\" [class.thf-checkbox-group-input-checked]=\"checkedOptions[option.value]\" [class.thf-checkbox-group-input-indeterminate]=\"checkedOptions[option.value] === null\" [checked]=\"option.value\" [disabled]=\"option.disabled || disabled\" [id]=\"'checkbox_' + i\" [required]=\"required\" [value]=\"option.value\"> <label #checkboxLabel class=\"thf-checkbox-group-label\" [class.thf-clickable]=\"checkboxLabel.tabIndex === 0\" [for]=\"'checkbox_' + i\" [tabindex]=\"option.disabled || disabled ? -1 : 0\" (click)=\"checkOption(option)\" (keydown)=\"onKeyDown($event, option)\"> {{option.label}} </label> </div> </div> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return ThfCheckboxGroupComponent; }),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef(function () { return ThfCheckboxGroupComponent; }),
                            multi: true,
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    ThfCheckboxGroupComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    return ThfCheckboxGroupComponent;
}(ThfCheckboxGroupBaseComponent));
export { ThfCheckboxGroupComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfCheckboxGroupComponent.prototype.changeDetector;
}
