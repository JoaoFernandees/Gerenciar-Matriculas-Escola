var __extends=this&&this.__extends||function(){var e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(t,o)};return function(t,o){function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import{ChangeDetectorRef,Component,forwardRef}from"@angular/core";import{NG_VALIDATORS,NG_VALUE_ACCESSOR}from"@angular/forms";import{ThfCheckboxGroupBaseComponent}from"./thf-checkbox-group-base.component";var ThfCheckboxGroupComponent=function(e){function t(t){var o=e.call(this)||this;return o.changeDetector=t,o}return __extends(t,e),t.prototype.ngAfterViewChecked=function(){this.changeDetector.detectChanges()},t.prototype.onKeyDown=function(e,t){32!==e.which&&32!==e.keyCode||(this.checkOption(t),e.preventDefault())},t.decorators=[{type:Component,args:[{selector:"thf-checkbox-group",template:'<thf-field-container [t-help]="help" [t-label]="label" [t-opcional]="!required"> <div class="thf-field-container-content thf-checkbox-group-content"> <div class="thf-row thf-pt-1 thf-pb-1"> <div *ngFor="let option of options; let i = index" class="thf-checkbox-group-item thf-md-{{ mdColumns }} thf-lg-{{ columns }}" [class.thf-checkbox-group-item-disabled]="option.disabled || disabled"> <input class="thf-input thf-checkbox-group-input" type="checkbox" [class.thf-checkbox-group-input-checked]="checkedOptions[option.value]" [class.thf-checkbox-group-input-indeterminate]="checkedOptions[option.value] === null" [checked]="option.value" [disabled]="option.disabled || disabled" [id]="\'checkbox_\' + i" [required]="required" [value]="option.value"> <label #checkboxLabel class="thf-checkbox-group-label" [class.thf-clickable]="checkboxLabel.tabIndex === 0" [for]="\'checkbox_\' + i" [tabindex]="option.disabled || disabled ? -1 : 0" (click)="checkOption(option)" (keydown)="onKeyDown($event, option)"> {{option.label}} </label> </div> </div> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ',providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return t}),multi:!0},{provide:NG_VALIDATORS,useExisting:forwardRef(function(){return t}),multi:!0}]}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t}(ThfCheckboxGroupBaseComponent);export{ThfCheckboxGroupComponent};