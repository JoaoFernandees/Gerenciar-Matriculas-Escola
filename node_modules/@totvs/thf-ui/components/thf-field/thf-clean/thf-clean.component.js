var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewContainerRef } from '@angular/core';
import { ThfCleanBaseComponent } from './thf-clean-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfCleanBaseComponent
 *
 * \@examplePrivate
 *
 * <example-private name="thf-clean-labs" title="Totvs Clean Labs">
 *   <file name="sample-thf-clean-labs.component.html"> </file>
 *   <file name="sample-thf-clean-labs.component.ts"> </file>
 * </example-private>
 */
var ThfCleanComponent = /** @class */ (function (_super) {
    __extends(ThfCleanComponent, _super);
    function ThfCleanComponent(viewRef) {
        var _this = _super.call(this) || this;
        _this.viewRef = viewRef;
        _this.parentComponent = _this.viewRef['_view']['component'];
        return _this;
    }
    /**
     * @param {?=} value
     * @return {?}
     */
    ThfCleanComponent.prototype.setInputValue = /**
     * @param {?=} value
     * @return {?}
     */
    function (value) {
        if (this.inputRef && this.inputRef.nativeElement) {
            this.inputRef.nativeElement.value = value;
        }
    };
    /**
     * @return {?}
     */
    ThfCleanComponent.prototype.getInputValue = /**
     * @return {?}
     */
    function () {
        if (this.inputRef && this.inputRef.nativeElement) {
            return this.inputRef.nativeElement.value;
        }
    };
    ThfCleanComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-clean', template: "<span *ngIf=\"showIcon()\" class=\"thf-icon thf-field-icon thf-icon-close\" (click)=\"clear()\"> </span> "
                },] },
    ];
    /** @nocollapse */
    ThfCleanComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    return ThfCleanComponent;
}(ThfCleanBaseComponent));
export { ThfCleanComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfCleanComponent.prototype.viewRef;
}
