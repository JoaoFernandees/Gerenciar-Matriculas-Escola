var __extends=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();import{Component,ElementRef,forwardRef}from"@angular/core";import{NG_VALUE_ACCESSOR,NG_VALIDATORS}from"@angular/forms";import{ThfInputGeneric}from"../thf-input-generic/thf-input-generic";var ThfEmailComponent=function(t){function e(e){var n=t.call(this,e)||this;return n.icon="thf-icon-mail",n.maxlength=254,n.type="email",n.pattern="^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$",n.mask="",n.listener=n.validateClassesForPattern.bind(n),n}return __extends(e,t),e.prototype.ngAfterViewInit=function(){var t=this;setTimeout(function(){t.onChangePropagate||t.inputEl.nativeElement.addEventListener("keyup",t.listener)})},e.prototype.ngOnDestroy=function(){this.onChangePropagate||this.inputEl.nativeElement.removeEventListener("keyup",this.listener)},e.prototype.extraValidation=function(t){return null},e.decorators=[{type:Component,args:[{selector:"thf-email",template:'<thf-field-container [t-help]="help" [t-label]="label" [t-opcional]="!required"> <div class="thf-field-container-content"> <div *ngIf="icon" class="thf-field-icon-container-left"> <span class="thf-icon thf-field-icon {{ icon }}" [class.thf-field-icon-disabled]="disabled"></span> </div> <input #inp class="thf-input" [attr.name]="name" [class.thf-input-icon-left]="icon" [class.thf-input-icon-right]="clean" [disabled]="disabled" [placeholder]="placeholder" [readonly]="readonly" [required]="required" [type]="type" (blur)="eventOnBlur($event)" (click)="eventOnClick($event)" (focus)="eventOnFocus($event)" (input)="eventOnInput($event)"> <div class="thf-field-icon-container-right"> <thf-clean [t-element-ref]="inputEl" (t-change-event)="clear($event)"></thf-clean> </div> </div> <thf-field-container-bottom [t-error-pattern]="getErrorPattern()"> </thf-field-container-bottom> </thf-field-container> ',providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return e}),multi:!0},{provide:NG_VALIDATORS,useExisting:forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:ElementRef}]},e}(ThfInputGeneric);export{ThfEmailComponent};