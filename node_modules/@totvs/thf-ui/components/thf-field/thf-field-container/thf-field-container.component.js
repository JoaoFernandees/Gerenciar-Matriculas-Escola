/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * Componente de uso interno, respons√°vel por atribuir uma label para o campo
 */
var ThfFieldContainerComponent = /** @class */ (function () {
    function ThfFieldContainerComponent() {
        this.optional = {
            pt: '(Opcional)',
            en: '(Optional)',
            es: '(Opcional)'
        };
    }
    /**
     * @return {?}
     */
    ThfFieldContainerComponent.prototype.getOptional = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var lang = (navigator.language) ? navigator.language.toLowerCase().slice(0, 2) : 'pt';
        return (this.optional[lang]) ? this.optional[lang] : '';
    };
    ThfFieldContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-field-container', template: "<div class=\"thf-field-container\"> <div class=\"thf-field-container-title\"> <span class=\"thf-field-title\">{{ label }}</span> <span class=\"thf-field-optional\" *ngIf=\"opcional && (label || help)\">{{ getOptional() }}</span> </div> <div class=\"thf-field-help\" *ngIf=\"help\">{{ help }}</div> <ng-content></ng-content> </div> "
                },] },
    ];
    ThfFieldContainerComponent.propDecorators = {
        label: [{ type: Input, args: ['t-label',] }],
        help: [{ type: Input, args: ['t-help',] }],
        opcional: [{ type: Input, args: ['t-opcional',] }]
    };
    return ThfFieldContainerComponent;
}());
export { ThfFieldContainerComponent };
if (false) {
    /** @type {?} */
    ThfFieldContainerComponent.prototype.optional;
    /**
     * Label do campo
     * @type {?}
     */
    ThfFieldContainerComponent.prototype.label;
    /**
     * Texto de apoio do campo
     * @type {?}
     */
    ThfFieldContainerComponent.prototype.help;
    /**
     * Label do campo
     * @type {?}
     */
    ThfFieldContainerComponent.prototype.opcional;
}
