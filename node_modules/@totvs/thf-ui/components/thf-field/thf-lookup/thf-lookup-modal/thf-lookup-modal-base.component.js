var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { browserLanguage, isTypeof, thfLocaleDefault } from '../../../../utils/util';
import { ThfModalComponent } from '../../../../components/thf-modal/thf-modal.component';
import { thfTableLiteralsDefault } from '../../../thf-table/thf-table-base.component';
/** @type {?} */
export var thfLookupLiteralsDefault = {
    en: (/** @type {?} */ ({
        modalPrimaryActionLabel: 'Select',
        modalSecondaryActionLabel: 'Cancel',
        modalPlaceholder: 'Search',
        modalTitle: 'Select a record',
        modalTableNoColumns: thfTableLiteralsDefault.en.noColumns,
        modalTableNoData: thfTableLiteralsDefault.en.noData,
        modalTableLoadingData: thfTableLiteralsDefault.en.loadingData,
        modalTableLoadMoreData: thfTableLiteralsDefault.en.loadMoreData
    })),
    es: (/** @type {?} */ ({
        modalPrimaryActionLabel: 'Seleccionar',
        modalSecondaryActionLabel: 'Cancelar',
        modalPlaceholder: 'Buscar',
        modalTitle: 'Seleccione un registro',
        modalTableNoColumns: thfTableLiteralsDefault.es.noColumns,
        modalTableNoData: thfTableLiteralsDefault.es.noData,
        modalTableLoadingData: thfTableLiteralsDefault.es.loadingData,
        modalTableLoadMoreData: thfTableLiteralsDefault.es.loadMoreData
    })),
    pt: (/** @type {?} */ ({
        modalPrimaryActionLabel: 'Selecionar',
        modalSecondaryActionLabel: 'Cancelar',
        modalPlaceholder: 'Pesquisar',
        modalTitle: 'Selecione um registro',
        modalTableNoColumns: thfTableLiteralsDefault.pt.noColumns,
        modalTableNoData: thfTableLiteralsDefault.pt.noData,
        modalTableLoadingData: thfTableLiteralsDefault.pt.loadingData,
        modalTableLoadMoreData: thfTableLiteralsDefault.pt.loadMoreData
    }))
};
/**
 * \@docsPrivate
 *
 * Classe base do componente Thf Lookup Modal.
 * @abstract
 */
var ThfLookupModalBaseComponent = /** @class */ (function () {
    function ThfLookupModalBaseComponent() {
        var _this = this;
        this.hasNext = true;
        this.isLoading = false;
        this.page = 1;
        this.pageSize = 10;
        this.primaryAction = {
            action: function () {
                _this.items.forEach(function (element) {
                    if (element['$selected']) {
                        _this.model.emit(element);
                        _this.thfModal.close();
                    }
                });
            },
            label: this.literals.modalPrimaryActionLabel
        };
        this.searchValue = '';
        this.secondaryAction = {
            action: function () {
                _this.model.emit(null);
                _this.thfModal.close();
            },
            label: this.literals.modalSecondaryActionLabel
        };
        /**
         * Evento utilizado ao selecionar um registro da tabela.
         */
        this.model = new EventEmitter();
    }
    Object.defineProperty(ThfLookupModalBaseComponent.prototype, "literals", {
        get: /**
         * @return {?}
         */
        function () {
            return this._literals || thfLookupLiteralsDefault[browserLanguage()];
        },
        /** Objeto com as literais usadas no `thf-lookup-modal`. */
        set: /**
         * Objeto com as literais usadas no `thf-lookup-modal`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = __assign({}, thfLookupLiteralsDefault[thfLocaleDefault], thfLookupLiteralsDefault[browserLanguage()], value);
                if (value.modalTitle) {
                    this.title = this.literals.modalTitle;
                }
            }
            else {
                this._literals = thfLookupLiteralsDefault[browserLanguage()];
            }
            this.primaryAction.label = this.literals.modalPrimaryActionLabel;
            this.secondaryAction.label = this.literals.modalSecondaryActionLabel;
            this.setTableLiterals();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfLookupModalBaseComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        /**
         * @deprecated 5.x.x
         *
         * Título da modal.
         */
        set: /**
         * @deprecated 5.x.x
         *
         * Título da modal.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.filterSubscription) {
            this.filterSubscription.unsubscribe();
        }
        if (this.searchSubscription) {
            this.searchSubscription.unsubscribe();
        }
        if (this.showMoreSubscription) {
            this.showMoreSubscription.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initializeData();
        this.setTableLiterals();
    };
    /**
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.search = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.page = 1;
        if (this.searchValue) {
            this.isLoading = true;
            this.searchSubscription = this.getFilteredData(this.searchValue).subscribe(function (data) {
                _this.items = data.items;
                _this.hasNext = data.hasNext;
                _this.isLoading = false;
            });
        }
        else {
            this.initializeData();
        }
    };
    /**
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.showMoreEvent = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.page++;
        this.isLoading = true;
        this.showMoreSubscription = this.getFilteredData(this.searchValue).subscribe(function (data) {
            data.items.forEach(function (item) {
                _this.items.push(item);
            });
            _this.hasNext = data.hasNext;
            _this.isLoading = false;
        });
    };
    /**
     * @private
     * @param {?} searchValue
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.getFilteredData = /**
     * @private
     * @param {?} searchValue
     * @return {?}
     */
    function (searchValue) {
        return this.filterService.getFilteredData(searchValue, this.page, this.pageSize, this.filterParams);
    };
    /**
     * @private
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.initializeData = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.isLoading = true;
        this.filterSubscription = this.getFilteredData('').subscribe(function (data) {
            _this.items = data.items;
            _this.hasNext = data.hasNext;
            _this.isLoading = false;
        });
    };
    /**
     * @private
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.setTableLiterals = /**
     * @private
     * @return {?}
     */
    function () {
        this.tableLiterals = {
            'noColumns': this.literals.modalTableNoColumns,
            'noData': this.literals.modalTableNoData,
            'loadingData': this.literals.modalTableLoadingData,
            'loadMoreData': this.literals.modalTableLoadMoreData,
        };
    };
    ThfLookupModalBaseComponent.propDecorators = {
        thfModal: [{ type: ViewChild, args: [ThfModalComponent,] }],
        columns: [{ type: Input, args: ['t-columns',] }],
        items: [{ type: Input, args: ['t-items',] }],
        literals: [{ type: Input, args: ['t-literals',] }],
        title: [{ type: Input, args: ['t-title',] }],
        filterService: [{ type: Input, args: ['t-filter-service',] }],
        filterParams: [{ type: Input, args: ['t-filter-params',] }],
        model: [{ type: Output, args: ['t-change-model',] }]
    };
    return ThfLookupModalBaseComponent;
}());
export { ThfLookupModalBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfLookupModalBaseComponent.prototype._literals;
    /**
     * @type {?}
     * @private
     */
    ThfLookupModalBaseComponent.prototype._title;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.hasNext;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.isLoading;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.page;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.pageSize;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.primaryAction;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.searchValue;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.secondaryAction;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.tableLiterals;
    /**
     * @type {?}
     * @private
     */
    ThfLookupModalBaseComponent.prototype.filterSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfLookupModalBaseComponent.prototype.searchSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfLookupModalBaseComponent.prototype.showMoreSubscription;
    /** @type {?} */
    ThfLookupModalBaseComponent.prototype.thfModal;
    /**
     * Lista das colunas da tabela.
     * Essa propriedade deve receber um array de objetos que implementam a interface ThfLookupColumn.
     * @type {?}
     */
    ThfLookupModalBaseComponent.prototype.columns;
    /**
     * Lista de itens da tabela.
     * @type {?}
     */
    ThfLookupModalBaseComponent.prototype.items;
    /**
     * Classe de serviço com a implementação do cliente.
     * @type {?}
     */
    ThfLookupModalBaseComponent.prototype.filterService;
    /**
     * Classe de serviço com a implementação do cliente.
     * @type {?}
     */
    ThfLookupModalBaseComponent.prototype.filterParams;
    /**
     * Evento utilizado ao selecionar um registro da tabela.
     * @type {?}
     */
    ThfLookupModalBaseComponent.prototype.model;
    /**
     * @abstract
     * @return {?}
     */
    ThfLookupModalBaseComponent.prototype.openModal = function () { };
}
