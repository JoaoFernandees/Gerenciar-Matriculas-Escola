import{Component,ElementRef,EventEmitter,HostListener,Input,Output,ViewChild}from"@angular/core";import{ThfMultiselectSearchComponent}from"./../thf-multiselect-search/thf-multiselect-search.component";var ThfMultiselectDropdownComponent=function(){function e(){this.scrollTop=0,this.show=!1,this.haveOptions=!1,this.hideSearch=!1,this.selectedValues=[],this.options=[],this.changeSearch=new EventEmitter,this.change=new EventEmitter,this.closeDropdown=new EventEmitter}return e.prototype.scrollTo=function(e){this.scrollTop=e<=2?0:44*e-88},e.prototype.isSelectedItem=function(e){return this.selectedValues.some(function(t){return t===e.value})},e.prototype.clickItem=function(e,t){this.updateSelectedValues(e,t),this.hideSearch||this.searchElement.setFocus()},e.prototype.updateSelectedValues=function(e,t){if(e)this.selectedValues.push(t.value);else{var s=this.selectedValues.indexOf(t.value);this.selectedValues.splice(s,1)}this.change.emit(this.selectedValues)},e.prototype.callChangeSearch=function(e){this.changeSearch.emit(e)},e.prototype.onKeydown=function(e){9===e.keyCode&&this.closeDropdown.emit()},e.prototype.controlVisibility=function(e){var t=this;this.show=e,this.checkInitialOptions(),e&&this.searchElement&&!this.hideSearch&&setTimeout(function(){t.searchElement.setFocus(),t.searchElement.clean()})},e.prototype.checkInitialOptions=function(){this.options.length&&(this.haveOptions=!0)},e.decorators=[{type:Component,args:[{selector:"thf-multiselect-dropdown",template:'<div class="thf-multiselect-content" [hidden]="!show"> <thf-multiselect-search #searchElement *ngIf="!hideSearch && haveOptions" [t-literals]="literals" [t-placeholder]="placeholderSearch" (t-change)="callChangeSearch($event)"> </thf-multiselect-search> <ul class="thf-multiselect-items-content" [scrollTop]="scrollTop" #ulElement> <div *ngIf="!options.length" class="thf-multiselect-content-no-data thf-text-center"> <span> {{ literals.noData }}</span> </div> <thf-multiselect-item *ngFor="let option of options" [t-option]="option" [t-selected]="isSelectedItem(option)" (t-change)="clickItem($event, option)"> </thf-multiselect-item> </ul> </div> '}]}],e.propDecorators={hideSearch:[{type:Input,args:["t-hide-search"]}],literals:[{type:Input,args:["t-literals"]}],placeholderSearch:[{type:Input,args:["t-placeholder-search"]}],selectedValues:[{type:Input,args:["t-selected-values"]}],options:[{type:Input,args:["t-options"]}],changeSearch:[{type:Output,args:["t-change-search"]}],change:[{type:Output,args:["t-change"]}],closeDropdown:[{type:Output,args:["t-close-dropdown"]}],ulElement:[{type:ViewChild,args:["ulElement",{read:ElementRef}]}],searchElement:[{type:ViewChild,args:["searchElement"]}],onKeydown:[{type:HostListener,args:["keydown",["$event"]]}]},e}();export{ThfMultiselectDropdownComponent};