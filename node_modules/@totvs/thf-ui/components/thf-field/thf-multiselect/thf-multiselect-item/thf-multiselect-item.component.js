/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
var ThfMultiselectItemComponent = /** @class */ (function () {
    function ThfMultiselectItemComponent() {
        /**
         * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
         */
        this.option = null;
        /**
         * Esta propriedade indica se o campo está selecionado ou não.
         */
        this.selected = false;
        /**
         * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
         */
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ThfMultiselectItemComponent.prototype.itemClicked = /**
     * @return {?}
     */
    function () {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    };
    ThfMultiselectItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-multiselect-item', template: "<li [value]=\"option?.value\" (click)=\"itemClicked()\" [class.thf-multiselect-item-selected]=\"selected\"> <a class=\"thf-multiselect-item\"> <input [checked]=\"selected\" class=\"thf-multiselect-checkbox-input\" [class.thf-multiselect-checkbox-input-checked]=\"selected\" type=\"checkbox\"> <label class=\"thf-multiselect-checkbox-label thf-clickable\"> {{ option?.label }} </label> </a> </li> "
                },] },
    ];
    ThfMultiselectItemComponent.propDecorators = {
        option: [{ type: Input, args: ['t-option',] }],
        selected: [{ type: Input, args: ['t-selected',] }],
        change: [{ type: Output, args: ['t-change',] }]
    };
    return ThfMultiselectItemComponent;
}());
export { ThfMultiselectItemComponent };
if (false) {
    /**
     * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.option;
    /**
     * Esta propriedade indica se o campo está selecionado ou não.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.selected;
    /**
     * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.change;
}
