var __extends=this&&this.__extends||function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}();import{Component,ElementRef,forwardRef,Input,IterableDiffers,ViewChild}from"@angular/core";import{NG_VALIDATORS,NG_VALUE_ACCESSOR}from"@angular/forms";import{removeDuplicatedOptions}from"../../../utils/util";import{ThfRadioGroupBaseComponent}from"./thf-radio-group-base.component";var ThfRadioGroupComponent=function(t){function e(e){var o=t.call(this)||this;return o.differ=e.find([]).create(null),o}return __extends(e,t),e.prototype.ngDoCheck=function(){this.differ.diff(this.options)&&removeDuplicatedOptions(this.options)},e.prototype.eventClick=function(t,e){e||this.changeValue(t)},e.prototype.getElementByValue=function(t){return this.inputEl.nativeElement.querySelector("input[value='"+t+"']")},e.prototype.onKeyUp=function(t,e){var o=t.keyCode||t.which;this.isArrowKey(o)&&this.changeValue(e)},e.prototype.isArrowKey=function(t){return t>=37&&t<=40},e.decorators=[{type:Component,args:[{selector:"thf-radio-group",template:'<thf-field-container [t-help]="help" [t-label]="label" [t-opcional]="!required"> <div class="thf-row thf-pt-1 thf-pb-1" #inp> <div *ngFor="let option of options" class="thf-radio-group-item thf-md-{{ mdColumns }} thf-lg-{{ columns }}"> <input #input class="thf-radio-group-input" type="radio" [attr.name]="name" [checked]="value === option.value" [class.thf-radio-group-input-checked]="value === option.value" [disabled]="option.disabled === true || disabled" [readonly]="readonly" [required]="required" [value]="option.value" (keyup)="onKeyUp($event, option.value)"> <label class="thf-radio-group-label" [class.thf-clickable]="!input.disabled" [for]="name" (click)="eventClick(option.value, option.disabled === true || disabled)"> {{ option.label }} </label> </div> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ',providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return e}),multi:!0},{provide:NG_VALIDATORS,useExisting:forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:IterableDiffers}]},e.propDecorators={label:[{type:Input,args:["t-label"]}],help:[{type:Input,args:["t-help"]}],inputEl:[{type:ViewChild,args:["inp",{read:ElementRef}]}]},e}(ThfRadioGroupBaseComponent);export{ThfRadioGroupComponent};