var __extends=this&&this.__extends||function(){var e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(t,o)};return function(t,o){function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import{ChangeDetectionStrategy,ChangeDetectorRef,ContentChild,Component,ElementRef,forwardRef,HostListener,IterableDiffers,Renderer2,ViewChild}from"@angular/core";import{NG_VALUE_ACCESSOR,NG_VALIDATORS}from"@angular/forms";import{isMobile,removeDuplicatedOptions,removeUndefinedAndNullOptions,validValue}from"../../../utils/util";import{ThfControlPositionService}from"./../../../services/thf-control-position/thf-control-position.service";import{ThfSelectBaseComponent}from"./thf-select-base.component";import{ThfSelectOptionTemplateDirective}from"./thf-select-option-template/thf-select-option-template.directive";var thfSelectContentOffset=8,thfSelectContentPositionDefault="bottom",ThfSelectComponent=function(e){function t(t,o,n,i,l){var s=e.call(this,t,o)||this;return s.renderer=i,s.controlPosition=l,s.isMobile=isMobile(),s.open=!1,s.selectIcon="thf-icon-arrow-down",s.onScroll=function(){s.controlPosition.adjustPosition(thfSelectContentPositionDefault)},s.differ=n.find([]).create(null),s}return __extends(t,e),t.prototype.onKeydown=function(e){var t=e.which||e.keyCode;this.open&&!e.altKey||40!==t&&38!==t||this.disableDefaultEventAndToggleButton(),13!==t&&32!==t||this.disableDefaultEventAndToggleButton(),this.open&&9===t&&(e.preventDefault(),this.toggleButton())},t.prototype.ngDoCheck=function(){this.differ.diff(this.options)&&(removeDuplicatedOptions(this.options),removeUndefinedAndNullOptions(this.options))},t.prototype.hideDropDown=function(){this.selectIcon="thf-icon-arrow-down",this.selector(".thf-select-container").classList.remove("thf-select-show"),this.open=!1,this.changeDetector.markForCheck(),this.removeListeners()},t.prototype.isEqual=function(e,t){return(e||0===e)&&t?e.toString()===t.toString():((null===e&&null!==t||void 0===e&&void 0!==t)&&(e=""+e),e===t)},t.prototype.onOptionClick=function(e){this.toggleButton(),this.updateModel(e)},t.prototype.onSelectChange=function(e){var t=this,o=this.element.nativeElement.querySelector("ul.thf-select-content");if(e&&this.options&&this.options.length){var n=this.options.find(function(o){return t.isEqual(o.value,e)});if(n){var i=this.options.indexOf(n);o.scrollTop=this.scrollValue(i,o.clientHeight),this.updateModel(n)}}},t.prototype.onUpdateOptions=function(){this.modelValue&&this.onSelectChange(this.modelValue)},t.prototype.scrollValue=function(e,t){var o=(e+1)*this.getSelectItemHeight();return this.scrollPosition=o>t?o:0},t.prototype.selector=function(e){return this.element.nativeElement.querySelector(e)},t.prototype.toggleButton=function(){var e=this.element.nativeElement.querySelector("ul.thf-select-content");this.selectElement.nativeElement.focus(),this.selectIcon=this.open?"thf-icon-arrow-down":"thf-icon-arrow-up",this.changeDetector.markForCheck(),this.options&&this.options.length&&(this.selector(".thf-select-container").classList.toggle("thf-select-show"),e.scrollTop=this.scrollPosition),this.open=!this.open,this.open?(this.setPositionDropdown(),this.initializeListeners()):this.removeListeners()},t.prototype.updateModel=function(e){this.selectedValue!==e.value&&(this.selectedValue=e.value,this.selectElement.nativeElement.value=e.value,this.callModelChange(e.value),this.displayValue=e.label,this.onChange(e.value))},t.prototype.wasClickedOnToggle=function(e){this.selectButtonElement.nativeElement.contains(e.target)||this.iconElement.nativeElement.contains(e.target)||this.hideDropDown()},t.prototype.writeValue=function(e){var t=this,o=this.options.find(function(o){return t.isEqual(o.value,e)});o?(this.selectElement.nativeElement.value=o.value,this.selectedValue=o.value,this.displayValue=o.label):validValue(this.selectedValue)&&(this.selectElement.nativeElement.value=void 0,this.callModelChange(void 0),this.selectedValue=void 0,this.displayValue=void 0),this.modelValue=e,this.changeDetector.detectChanges()},t.prototype.disableDefaultEventAndToggleButton=function(){var e=this;this.selectElement.nativeElement.style.display="none",setTimeout(function(){e.selectElement.nativeElement.style.display="block",e.toggleButton()})},t.prototype.getSelectItemHeight=function(){var e=this.selector("div.thf-select-item");return e&&e.clientHeight},t.prototype.initializeListeners=function(){var e=this;this.clickoutListener=this.renderer.listen("document","click",function(t){e.wasClickedOnToggle(t)}),this.eventResizeListener=this.renderer.listen("window","resize",function(){e.hideDropDown()}),window.addEventListener("scroll",this.onScroll,!0)},t.prototype.removeListeners=function(){this.clickoutListener&&this.clickoutListener(),this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)},t.prototype.setPositionDropdown=function(){this.controlPosition.setElements(this.contentList.nativeElement,thfSelectContentOffset,this.selectButtonElement,["top","bottom"],!0),this.controlPosition.adjustPosition(thfSelectContentPositionDefault)},t.decorators=[{type:Component,args:[{selector:"thf-select",template:'<thf-field-container [t-label]="label" [t-help]="help" [t-opcional]="!required"> <select #select class="thf-select" [attr.name]="name" [disabled]="disabled" [ngClass]="{\'thf-select-mobile\' : isMobile}" [required]="required" (change)="onSelectChange($event.target.value)"> <option *ngIf="isMobile" disabled hidden selected></option> <option *ngFor="let option of options" [value]="option.value" (click)="onOptionClick(option)"> {{option?.label}} </option> </select> <div class="thf-select-container"> <div #selectButton class="thf-select-button" [ngClass]="{\'thf-select-button-disabled\' : disabled}" (click)="toggleButton()"> <span>{{displayValue || placeholder}}</span> <div class="thf-field-icon-container-right"> <span #icon class="thf-icon {{selectIcon}}" [ngClass]="disabled ? \'thf-field-icon-disabled\' : \'thf-field-icon\'"></span> </div> </div> <ul #contentList class="thf-select-content" [ngClass]="{\'thf-invisible\': isMobile}"> <li *ngFor="let option of options" [class.thf-select-item-selected]="selectedValue == option.value" [value]="option.value" (click)="onOptionClick(option)"> <div class="thf-select-item"> <ng-container *ngIf="selectOptionTemplate; then optionTemplate; else defaultOptionTemplate"></ng-container> <ng-template #defaultOptionTemplate> <span>{{option?.label}}</span> </ng-template> <ng-template #optionTemplate [ngTemplateOutlet]="selectOptionTemplate?.templateRef" [ngTemplateOutletContext]="{$implicit: option}"> </ng-template> </div> </li> </ul> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ',changeDetection:ChangeDetectionStrategy.OnPush,providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return t}),multi:!0},{provide:NG_VALIDATORS,useExisting:forwardRef(function(){return t}),multi:!0},ThfControlPositionService]}]}],t.ctorParameters=function(){return[{type:ElementRef},{type:ChangeDetectorRef},{type:IterableDiffers},{type:Renderer2},{type:ThfControlPositionService}]},t.propDecorators={selectOptionTemplate:[{type:ContentChild,args:[ThfSelectOptionTemplateDirective]}],contentList:[{type:ViewChild,args:["contentList",{read:ElementRef}]}],iconElement:[{type:ViewChild,args:["icon",{read:ElementRef}]}],selectElement:[{type:ViewChild,args:["select",{read:ElementRef}]}],selectButtonElement:[{type:ViewChild,args:["selectButton",{read:ElementRef}]}],onKeydown:[{type:HostListener,args:["keydown",["$event"]]}]},t}(ThfSelectBaseComponent);export{ThfSelectComponent};