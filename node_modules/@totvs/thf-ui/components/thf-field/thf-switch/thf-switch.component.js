var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfSwitchBaseComponent } from './thf-switch-base.component';
import { ThfSwitchLabelPosition } from './thf-switch-label-position.enum';
/**
 * \@docsExtends ThfSwitchBaseComponent
 *
 * \@example
 *
 * <example name="thf-switch-basic" title="Totvs Switch Basic">
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.html"> </file>
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-labs" title="Totvs Switch Labs">
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.html"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.e2e-spec.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order" title="Totvs Switch - Order Summary">
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.html"> </file>
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order-reactive-form" title="Totvs Switch - Order Summary Reactive Form">
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.html"> </file>
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.ts"> </file>
 * </example>
 */
var ThfSwitchComponent = /** @class */ (function (_super) {
    __extends(ThfSwitchComponent, _super);
    function ThfSwitchComponent(changeDetector) {
        var _this = _super.call(this) || this;
        _this.changeDetector = changeDetector;
        return _this;
    }
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.changeDetector.detectChanges();
    };
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.getLabelPosition = /**
     * @return {?}
     */
    function () {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'left';
            case ThfSwitchLabelPosition.Right: return 'right';
            default: return 'right';
        }
    };
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.getSwitchPosition = /**
     * @return {?}
     */
    function () {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'right';
            case ThfSwitchLabelPosition.Right: return 'left';
            default: return 'left';
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfSwitchComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.which === 32 || event.keyCode === 32) {
            event.preventDefault();
            this.eventClick();
        }
    };
    ThfSwitchComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-switch', template: "<thf-field-container [t-label]=\"label\" [t-help]=\"help\"> <div class=\"thf-field-container-content thf-switch-content\" [attr.name]=\"name\"> <div class=\"thf-switch-container thf-clickable\" [class.thf-switch-container-disabled]=\"disabled\" [class.thf-switch-container-off]=\"switchValue === false && !disabled\" [class.thf-switch-container-on]=\"switchValue === true && !disabled\" [class.thf-switch-container-right]=\"getSwitchPosition() === 'right'\" [tabindex]=\"disabled ? -1 : 0\" (click)=\"eventClick()\" (keydown)=\"onKeyDown($event)\"> <div class=\"thf-switch-button\" [class.thf-switch-button-on]=\"switchValue === true\" [class.thf-switch-button-off]=\"switchValue === false\" [class.thf-switch-button-disabled]=\"disabled\"> <span class=\"thf-icon thf-icon-{{ switchValue === true ? 'ok' : 'close' }}\"></span> </div> </div> <span class=\"thf-switch-label thf-clickable thf-switch-label-{{ getLabelPosition() }}\" (click)=\"eventClick()\"> {{ switchValue === true ? labelOn : labelOff }} </span> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return ThfSwitchComponent; }),
                            multi: true,
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    ThfSwitchComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    return ThfSwitchComponent;
}(ThfSwitchBaseComponent));
export { ThfSwitchComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfSwitchComponent.prototype.changeDetector;
}
