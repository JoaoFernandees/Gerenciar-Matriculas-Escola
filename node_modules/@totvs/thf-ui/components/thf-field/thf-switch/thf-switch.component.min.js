var __extends=this&&this.__extends||function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();import{ChangeDetectorRef,Component,forwardRef}from"@angular/core";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{ThfSwitchBaseComponent}from"./thf-switch-base.component";import{ThfSwitchLabelPosition}from"./thf-switch-label-position.enum";var ThfSwitchComponent=function(t){function e(e){var i=t.call(this)||this;return i.changeDetector=e,i}return __extends(e,t),e.prototype.ngAfterViewChecked=function(){this.changeDetector.detectChanges()},e.prototype.getLabelPosition=function(){switch(this.labelPosition){case ThfSwitchLabelPosition.Left:return"left";case ThfSwitchLabelPosition.Right:default:return"right"}},e.prototype.getSwitchPosition=function(){switch(this.labelPosition){case ThfSwitchLabelPosition.Left:return"right";case ThfSwitchLabelPosition.Right:default:return"left"}},e.prototype.onKeyDown=function(t){32!==t.which&&32!==t.keyCode||(t.preventDefault(),this.eventClick())},e.decorators=[{type:Component,args:[{selector:"thf-switch",template:'<thf-field-container [t-label]="label" [t-help]="help"> <div class="thf-field-container-content thf-switch-content" [attr.name]="name"> <div class="thf-switch-container thf-clickable" [class.thf-switch-container-disabled]="disabled" [class.thf-switch-container-off]="switchValue === false && !disabled" [class.thf-switch-container-on]="switchValue === true && !disabled" [class.thf-switch-container-right]="getSwitchPosition() === \'right\'" [tabindex]="disabled ? -1 : 0" (click)="eventClick()" (keydown)="onKeyDown($event)"> <div class="thf-switch-button" [class.thf-switch-button-on]="switchValue === true" [class.thf-switch-button-off]="switchValue === false" [class.thf-switch-button-disabled]="disabled"> <span class="thf-icon thf-icon-{{ switchValue === true ? \'ok\' : \'close\' }}"></span> </div> </div> <span class="thf-switch-label thf-clickable thf-switch-label-{{ getLabelPosition() }}" (click)="eventClick()"> {{ switchValue === true ? labelOn : labelOff }} </span> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ',providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},e}(ThfSwitchBaseComponent);export{ThfSwitchComponent};