var __extends=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();import{Component,ElementRef,forwardRef,ViewChild}from"@angular/core";import{NG_VALIDATORS,NG_VALUE_ACCESSOR}from"@angular/forms";import{ThfTextareaBaseComponent}from"./thf-textarea-base.component";var ThfTextareaComponent=function(t){function e(){var e=t.call(this)||this;return e.fireChange=!1,e}return __extends(e,t),e.prototype.writeValueModel=function(t){this.inputEl&&(this.inputEl.nativeElement.value=t||""),t&&this.change.emit(t)},e.prototype.validMaxLength=function(t,e){return t&&e.length>t?e.toString().substring(0,t):e},e.prototype.eventOnInput=function(t){var e=this.validMaxLength(this.maxlength,t.target.value);this.callOnChange(e),this.inputEl.nativeElement.value=e},e.prototype.eventOnFocus=function(){this.valueBeforeChange=this.inputEl.nativeElement.value,this.enter.emit()},e.prototype.eventOnBlur=function(){this.blur.emit(),this.controlChangeEmitter()},e.prototype.controlChangeEmitter=function(){var t=this.inputEl.nativeElement.value;t!==this.valueBeforeChange&&this.change.emit(t)},e.decorators=[{type:Component,args:[{selector:"thf-textarea",template:'<thf-field-container [t-help]="help" [t-label]="label" [t-opcional]="!required"> <div class="thf-field-container-content"> <textarea #inp class="thf-textarea" (blur)="eventOnBlur()" (focus)="eventOnFocus()" (input)="eventOnInput($event)" [attr.name]="name" [disabled]="disabled" [placeholder]="placeholder" [readonly]="readonly" [required]="required" [rows]="rows"> </textarea> </div> <thf-field-container-bottom></thf-field-container-bottom> </thf-field-container> ',providers:[{provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return e}),multi:!0},{provide:NG_VALIDATORS,useExisting:forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[]},e.propDecorators={inputEl:[{type:ViewChild,args:["inp",{read:ElementRef}]}]},e}(ThfTextareaBaseComponent);export{ThfTextareaComponent};