[{"__symbolic":"module","version":4,"metadata":{"ThfUploadComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./thf-upload-base.component","name":"ThfUploadBaseComponent","line":46,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"thf-upload","template":"<thf-field-container [t-label]=\"label\" [t-help]=\"help\" [t-opcional]=\"!required\"> <div class=\"thf-upload\"> <input #inputFile class=\"thf-upload-input\" type=\"file\" [accept]=\"allowedExtensions\" [attr.name]=\"name\" [disabled]=\"isDisabled\" [multiple]=\"isMultiple\" [required]=\"required\" (change)=\"onFileChange($event)\"> <thf-button class=\"thf-upload-button\" for=\"file\" [t-disabled]=\"isDisabled\" [t-label]=\"literals.selectFile\" (t-click)=\"onClick()\"> </thf-button> <div class=\"thf-upload-progress\" *ngFor=\"let file of currentFiles\" [id]=\"file.uid\"> <div class=\"thf-upload-progress-status\"></div> <div class=\"thf-upload-filename-foreground\"> <div class=\"thf-upload-filename\"> <span class=\"thf-icon {{ getThfIcon(file) }}\"></span> {{ file.name }} - {{ getFileSize(file.size) }} </div> <div class=\"thf-upload-group-actions\"> <span *ngIf=\"isStatusFile('None', file) || isStatusFile('Error', file)\" class=\"thf-upload-action\" (click)=\"removeFile(file)\"> {{ literals.deleteFile }} </span> <span *ngIf=\"isStatusFile('Uploading', file)\" class=\"thf-upload-action\" (click)=\"stopUpload(file)\"> {{ literals.cancel }} </span> <span *ngIf=\"isStatusFile('Error', file)\" class=\"thf-upload-action\" (click)=\"uploadFiles([file])\"> {{ literals.tryAgain }} </span> </div> </div> </div> <thf-button *ngIf=\"!autoUpload && (currentFiles?.length > 0 && hasFileNotUploaded)\" t-type=\"primary\" [t-disabled]=\"hasAnyFileUploading(currentFiles)\" [t-label]=\"literals.startSending\" (t-click)=\"uploadFiles(currentFiles)\"> </thf-button> </div> </thf-field-container> ","providers":[{"__symbolic":"reference","module":"./thf-upload.service","name":"ThfUploadService","line":33,"character":4},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":35,"character":15},"useExisting":{"__symbolic":"reference","name":"ThfUploadComponent"},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":40,"character":15},"useExisting":{"__symbolic":"reference","name":"ThfUploadComponent"},"multi":true}]}]}],"members":{"inputFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":50,"character":3},"arguments":["inputFile",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":50,"character":33}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":53,"character":24},{"__symbolic":"reference","module":"./thf-upload.service","name":"ThfUploadService","line":54,"character":27}]}],"onClick":[{"__symbolic":"method"}],"onFileChange":[{"__symbolic":"method"}],"updateModel":[{"__symbolic":"method"}],"uploadFiles":[{"__symbolic":"method"}],"stopUpload":[{"__symbolic":"method"}],"stopUploadHandler":[{"__symbolic":"method"}],"uploadingHandler":[{"__symbolic":"method"}],"successHandler":[{"__symbolic":"method"}],"errorHandler":[{"__symbolic":"method"}],"isStatusFile":[{"__symbolic":"method"}],"hasAnyFileUploading":[{"__symbolic":"method"}],"getThfIcon":[{"__symbolic":"method"}],"getUploadService":[{"__symbolic":"method"}],"setUploadStatus":[{"__symbolic":"method"}],"setProgressStatus":[{"__symbolic":"method"}],"removeFile":[{"__symbolic":"method"}],"getFileSize":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"addFileNameClass":[{"__symbolic":"method"}],"removeFileNameClass":[{"__symbolic":"method"}],"parseFiles":[{"__symbolic":"method"}],"checkRestrictions":[{"__symbolic":"method"}],"isAllowedExtension":[{"__symbolic":"method"}],"cleanInputValue":[{"__symbolic":"method"}],"existsFileSameName":[{"__symbolic":"method"}],"insertFileInFiles":[{"__symbolic":"method"}],"isExceededFileLimit":[{"__symbolic":"method"}],"updateExistsFileInFiles":[{"__symbolic":"method"}]}}}}]