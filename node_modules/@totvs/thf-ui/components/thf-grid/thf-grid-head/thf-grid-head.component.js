/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectorRef } from '@angular/core';
var ThfGridHeadComponent = /** @class */ (function () {
    function ThfGridHeadComponent(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.align = 'left';
        this.boolean = false;
        this.position = '';
        this.tabIndex = -1;
    }
    Object.defineProperty(ThfGridHeadComponent.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            return this._width ? this._width + "px" : '100%';
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._width = value;
        },
        enumerable: true,
        configurable: true
    });
    ThfGridHeadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-grid-head', template: "<div> <div [id]=\"position\" class=\"thf-grid-head-content thf-grid-head-{{ align }}\" tabindex=\"{{ title ? 0 : -1 }}\"> <span>{{ title || '&nbsp;' }}</span> </div> </div> ", styles: [".thf-grid-head-content { border-bottom: 2px solid #ceeaf2; border-left: none; border-right: 1px solid #eceeee; border-top: none; color: #0c9abe; font-family: NunitoSans-bold; font-size: 14px; height: 44px; line-height: 1.71; margin: 0; max-height: 44px; min-height: 44px; overflow: hidden; padding: 10px 16px; text-align: left; text-overflow: ellipsis; white-space: nowrap; } .thf-grid-head-center { text-align: center; } .thf-grid-head-right { text-align: right; } .thf-grid-head-content:focus { border: 1px solid #0c9abe; outline: none; } "]
                },] },
    ];
    /** @nocollapse */
    ThfGridHeadComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    ThfGridHeadComponent.propDecorators = {
        align: [{ type: Input, args: ['t-align',] }],
        boolean: [{ type: Input, args: ['t-freeze',] }],
        position: [{ type: Input, args: ['t-position',] }],
        tabIndex: [{ type: Input, args: ['t-tab-index',] }],
        width: [{ type: Input, args: ['t-width',] }],
        title: [{ type: Input, args: ['t-title',] }]
    };
    return ThfGridHeadComponent;
}());
export { ThfGridHeadComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfGridHeadComponent.prototype._width;
    /** @type {?} */
    ThfGridHeadComponent.prototype.align;
    /** @type {?} */
    ThfGridHeadComponent.prototype.boolean;
    /** @type {?} */
    ThfGridHeadComponent.prototype.position;
    /** @type {?} */
    ThfGridHeadComponent.prototype.tabIndex;
    /** @type {?} */
    ThfGridHeadComponent.prototype.title;
    /**
     * @type {?}
     * @private
     */
    ThfGridHeadComponent.prototype.changeDetectorRef;
}
