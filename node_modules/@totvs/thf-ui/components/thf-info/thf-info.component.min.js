var __extends=this&&this.__extends||function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function i(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}();import{Component}from"@angular/core";import{ThfInfoBaseComponent}from"./thf-info-base.component";var ThfInfoComponent=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return __extends(n,t),n.decorators=[{type:Component,args:[{selector:"thf-info",template:'<div class="thf-info" [class.thf-row]="orientation === thfInfoOrientation.Horizontal && labelSize"> <div class="thf-info-container-title" [ngClass]="labelSize && orientation === thfInfoOrientation.Horizontal ? \'thf-sm-\' + labelSize : \'\'" [class.thf-info-label-horizontal]="orientation === thfInfoOrientation.Horizontal" [class.thf-text-nowrap]="orientation === thfInfoOrientation.Horizontal && !labelSize"> <span class="thf-info-label"> {{ orientation === thfInfoOrientation.Horizontal ? label + \':\' : label }} </span> </div> <div [ngClass]="labelSize && orientation === thfInfoOrientation.Horizontal ? \'thf-sm-\' + (12 - labelSize) : \'\'" [class.thf-info-container-content]="orientation !== thfInfoOrientation.Horizontal" [class.thf-info-value-horizontal]="orientation === thfInfoOrientation.Horizontal"> <span class="thf-info-value">{{ value }}</span> </div> </div> '}]}],n}(ThfInfoBaseComponent);export{ThfInfoComponent};