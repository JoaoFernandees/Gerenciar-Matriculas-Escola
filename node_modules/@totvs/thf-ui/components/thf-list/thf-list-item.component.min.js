import{Component,ElementRef,Input,Renderer2,ViewChild,ViewContainerRef}from"@angular/core";var ThfListItemComponent=function(){function t(t,n){var e=this;this.actions=[],this.showAction=!1,this.showLink=!0,this.showDetail=!1,this.showContent=!0,this.closeListActionsWhenClickedOut=function(t){e.checkClickedOutActionsIcon(t)&&e.closeActions()},this._parentRef=t._view.component,this.collapsed=!0,this.clickListener=n.listen("document","click",this.closeListActionsWhenClickedOut)}return t.prototype.ngAfterContentInit=function(){this.content&&0===this.content.nativeElement.children.length&&(this.showContent=!1),this.detailsContent&&0===this.detailsContent.nativeElement.children.length&&(this.showLink=!1)},t.prototype.ngOnDestroy=function(){this.clickListener()},Object.defineProperty(t.prototype,"parentRef",{get:function(){return this._parentRef},enumerable:!0,configurable:!0}),t.prototype.checkClickedOutActionsIcon=function(t){return this.actionsIconElement&&!this.actionsIconElement.nativeElement.contains(t.target)},t.prototype.closeActions=function(){this.actions&&(this.showAction=!1)},t.decorators=[{type:Component,args:[{selector:"thf-list-item",template:'<div class="thf-list-border"> <div class="thf-list-header-container"> <div *ngIf="title" class="thf-list-title-container"> <span class="thf-list-title">{{title}}</span> </div> <div id="divActionButtonsId" class="thf-list-actions-button" *ngIf="actions.length > 0 && actions.length <= 2"> <thf-button *ngFor="let action of actions" [t-label]="action.label" (t-click)="parentRef[action.function](index)" t-small="true"></thf-button> </div> <div class="thf-list-more-button" (click)="showAction = !showAction" *ngIf="actions.length > 0 && actions.length > 2"> <span #actionsIconElement class="thf-icon thf-icon-more thf-list-icon-action"></span> <div class="thf-list-actions" [hidden]="!showAction"> <div class="thf-list-action" *ngFor="let action of actions" (click)="parentRef[action.function](index)"> {{action.label}} </div> </div> </div> </div> <div class="thf-list-item-container" #content [hidden]="!showContent"> <ng-content select="thf-list-item-content"></ng-content> </div> <div class="thf-list-detail-container" [hidden]="!showDetail" #detailsContent> <ng-content select="thf-list-item-detail"></ng-content> </div> <div select="details" class="thf-list-details-link" (click)="showDetail = !showDetail" [hidden]="!showLink"> <a class="thf-list-details" *ngIf="!showDetail">Exibir detalhes completamente</a> <a class="thf-list-details" *ngIf="showDetail">Ocultar detalhes completamente</a> </div> </div> '}]}],t.ctorParameters=function(){return[{type:ViewContainerRef},{type:Renderer2}]},t.propDecorators={title:[{type:Input,args:["t-title"]}],index:[{type:Input,args:["t-index"]}],actions:[{type:Input,args:["t-actions"]}],actionsIconElement:[{type:ViewChild,args:["actionsIconElement",{read:ElementRef}]}],detailsContent:[{type:ViewChild,args:["detailsContent"]}],content:[{type:ViewChild,args:["content"]}]},t}();export{ThfListItemComponent};