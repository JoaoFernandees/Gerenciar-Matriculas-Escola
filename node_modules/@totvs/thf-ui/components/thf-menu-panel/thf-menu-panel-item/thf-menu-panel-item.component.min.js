import{Component,Input}from"@angular/core";import{ThfMenuPanelItemsService}from"../services/thf-menu-panel-items.service";var ThfMenuPanelItemComponent=function(){function e(e){this.menuItemsService=e}return e.prototype.ngOnDestroy=function(){this.itemsSubscription.unsubscribe()},e.prototype.ngOnInit=function(){this.subscribeMenuClickedFromParent()},e.prototype.clickMenuItem=function(e){e.ctrlKey||e.metaKey||(e.preventDefault(),this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal))},e.prototype.activateMenu=function(e){this.menuItemInternal.isSelected=this.menuItemInternal.id===e.id},e.prototype.processMenuItem=function(e){"internalLink"===this.menuItemInternal.type&&this.activateMenu(e.active)},e.prototype.subscribeMenuClickedFromParent=function(){var e=this;this.itemsSubscription=this.menuItemsService.receiveFromParentMenuClicked().subscribe(function(n){e.processMenuItem(n)})},e.decorators=[{type:Component,args:[{selector:"thf-menu-panel-item",template:'\x3c!-- menu com link interno --\x3e <a *ngIf="menuItemInternal.type === \'internalLink\'" [routerLink]="menuItemInternal.link"> <ng-container *ngTemplateOutlet="menuItemTemplate"></ng-container> </a> \x3c!-- menu com link externo --\x3e <a *ngIf="menuItemInternal.type === \'externalLink\'" [href]="menuItemInternal.link"> <ng-container *ngTemplateOutlet="menuItemTemplate"></ng-container> </a> \x3c!-- menu sem link --\x3e <a *ngIf="menuItemInternal.type === \'noLink\'" href="javascript:;"> <ng-container *ngTemplateOutlet="menuItemTemplate"></ng-container> </a> <ng-template #menuItemTemplate> <div class="thf-menu-panel-item" t-tooltip-position="right" [class.thf-menu-panel-item-selected]="menuItemInternal.isSelected" [t-tooltip]="menuItemInternal.label" (click)="clickMenuItem($event);"> <span class="thf-icon {{menuItemInternal.icon}}"></span> </div> </ng-template> '}]}],e.ctorParameters=function(){return[{type:ThfMenuPanelItemsService}]},e.propDecorators={menuItemInternal:[{type:Input,args:["t-menu-item-internal"]}]},e}();export{ThfMenuPanelItemComponent};