/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que apresenta o campo de pesquisa no thf-menu.
 */
var ThfMenuFilterComponent = /** @class */ (function () {
    function ThfMenuFilterComponent() {
        // Variável necessária para o thf-clean identificar que deve ser criado.
        this.clean = true;
        this.filter = new EventEmitter();
    }
    /**
     * @param {?} search
     * @return {?}
     */
    ThfMenuFilterComponent.prototype.filterItems = /**
     * @param {?} search
     * @return {?}
     */
    function (search) {
        this.filter.emit(search);
    };
    ThfMenuFilterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-menu-filter', template: "<div class=\"thf-menu-filter-container\"> <input #inputFilter type=\"text\" class=\"thf-menu-filter\" placeholder=\"Pesquisar\" (keyup)=\"filterItems(inputFilter.value)\"> <div class=\"thf-menu-filter-search-icon-container\"> <span *ngIf=\"!loading\" class=\"thf-icon thf-menu-filter-icon thf-icon-search\"></span> <span *ngIf=\"loading\" class=\"thf-icon thf-menu-filter-icon thf-loading-icon\"></span> </div> <div class=\"thf-menu-filter-close-icon-container\"> <thf-clean [t-element-ref]=\"inputFilterElement\" (t-change-event)=\"filterItems(inputFilter.value)\"></thf-clean> </div> </div> "
                },] },
    ];
    ThfMenuFilterComponent.propDecorators = {
        loading: [{ type: Input, args: ['t-loading',] }],
        inputFilterElement: [{ type: ViewChild, args: ['inputFilter', { read: ElementRef },] }],
        filter: [{ type: Output, args: ['t-filter',] }]
    };
    return ThfMenuFilterComponent;
}());
export { ThfMenuFilterComponent };
if (false) {
    /** @type {?} */
    ThfMenuFilterComponent.prototype.clean;
    /** @type {?} */
    ThfMenuFilterComponent.prototype.loading;
    /** @type {?} */
    ThfMenuFilterComponent.prototype.inputFilterElement;
    /** @type {?} */
    ThfMenuFilterComponent.prototype.filter;
}
