var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Renderer2 } from '@angular/core';
import { ThfPageContentBaseComponent } from './thf-page-content-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfPageContentBaseComponent
 */
var ThfPageContentComponent = /** @class */ (function (_super) {
    __extends(ThfPageContentComponent, _super);
    function ThfPageContentComponent(renderer) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.contentOpacity = 0;
        _this.height = '90%';
        _this.overflowY = 'none';
        _this.initializeListeners();
        return _this;
    }
    /**
     * @return {?}
     */
    ThfPageContentComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.recalculateHeaderSize();
    };
    /**
     * @return {?}
     */
    ThfPageContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeListeners();
    };
    /**
     * @return {?}
     */
    ThfPageContentComponent.prototype.recalculateHeaderSize = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () {
            /** @type {?} */
            var pageHeaderElement = document.querySelector('div.thf-page-header');
            _this.setHeightContent(pageHeaderElement);
            _this.contentOpacity = 1;
        });
    };
    /**
     * @param {?} thfPageHeader
     * @return {?}
     */
    ThfPageContentComponent.prototype.setHeightContent = /**
     * @param {?} thfPageHeader
     * @return {?}
     */
    function (thfPageHeader) {
        /** @type {?} */
        var bodyHeight = document.body.clientHeight;
        /** @type {?} */
        var pageHeaderHeight = thfPageHeader ? thfPageHeader.offsetTop + thfPageHeader.offsetHeight : 0;
        /** @type {?} */
        var newHeight = bodyHeight - pageHeaderHeight;
        this.height = newHeight + "px";
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageContentComponent.prototype.initializeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', function () {
            _this.recalculateHeaderSize();
        });
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageContentComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        this.resizeListener();
    };
    ThfPageContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-content', template: "<div class=\"thf-page-content\" [style.height]=\"height\" [style.opacity]=\"contentOpacity\" [style.overflow-y]=\"overflowY\"> <ng-content></ng-content> </div> "
                },] },
    ];
    /** @nocollapse */
    ThfPageContentComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    return ThfPageContentComponent;
}(ThfPageContentBaseComponent));
export { ThfPageContentComponent };
if (false) {
    /** @type {?} */
    ThfPageContentComponent.prototype.contentOpacity;
    /** @type {?} */
    ThfPageContentComponent.prototype.height;
    /** @type {?} */
    ThfPageContentComponent.prototype.overflowY;
    /** @type {?} */
    ThfPageContentComponent.prototype.renderer;
}
