/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, ViewChild } from '@angular/core';
import { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';
/**
 * \@description
 *
 * O componente `thf-page-default` é utilizado como o container principal para as telas sem um template definido.
 * @abstract
 */
var ThfPageDefaultBaseComponent = /** @class */ (function () {
    function ThfPageDefaultBaseComponent() {
        this._actions = [];
    }
    Object.defineProperty(ThfPageDefaultBaseComponent.prototype, "actions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._actions;
        },
        /**
         * @optional
         *
         * @description
         *
         * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
         * @param {?} actions
         * @return {?}
         */
        function (actions) {
            this._actions = Array.isArray(actions) ? actions : [];
            this.setDropdownActions();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDefaultBaseComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        /** Título da página. */
        set: /**
         * Título da página.
         * @param {?} title
         * @return {?}
         */
        function (title) {
            this._title = title;
            this.thfPageContent.recalculateHeaderSize();
        },
        enumerable: true,
        configurable: true
    });
    ThfPageDefaultBaseComponent.propDecorators = {
        thfPageContent: [{ type: ViewChild, args: [ThfPageContentComponent,] }],
        actions: [{ type: Input, args: ['t-actions',] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        title: [{ type: Input, args: ['t-title',] }]
    };
    return ThfPageDefaultBaseComponent;
}());
export { ThfPageDefaultBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDefaultBaseComponent.prototype._actions;
    /**
     * @type {?}
     * @private
     */
    ThfPageDefaultBaseComponent.prototype._title;
    /** @type {?} */
    ThfPageDefaultBaseComponent.prototype.thfPageContent;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDefaultBaseComponent.prototype.breadcrumb;
    /**
     * @abstract
     * @return {?}
     */
    ThfPageDefaultBaseComponent.prototype.setDropdownActions = function () { };
}
