var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewContainerRef } from '@angular/core';
import { ThfPageEditBaseComponent } from './thf-page-edit-base.component';
import { callAction, hasAction } from '../thf-page-util/thf-page-util';
/**
 * \@docsExtends ThfPageEditBaseComponent
 *
 * \@example
 *
 * <example name="thf-page-edit-basic" title="Totvs Page Edit Basic">
 *  <file name="sample-thf-page-edit-basic/sample-thf-page-edit-basic.component.html"> </file>
 *  <file name="sample-thf-page-edit-basic/sample-thf-page-edit-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-edit-labs" title="Totvs Page Edit Labs">
 *  <file name="sample-thf-page-edit-labs/sample-thf-page-edit-labs.component.html"> </file>
 *  <file name="sample-thf-page-edit-labs/sample-thf-page-edit-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-edit-user" title="Totvs Page Edit - User">
 *  <file name="sample-thf-page-edit-user/sample-thf-page-edit-user.component.html"> </file>
 *  <file name="sample-thf-page-edit-user/sample-thf-page-edit-user.component.ts"> </file>
 * </example>
 */
var ThfPageEditComponent = /** @class */ (function (_super) {
    __extends(ThfPageEditComponent, _super);
    function ThfPageEditComponent(viewRef) {
        var _this = _super.call(this) || this;
        _this.hasAction = hasAction;
        _this.callAction = callAction;
        _this.parentContext = viewRef['_view']['component'];
        return _this;
    }
    /**
     * @param {?} icon
     * @return {?}
     */
    ThfPageEditComponent.prototype.getIcon = /**
     * @param {?} icon
     * @return {?}
     */
    function (icon) {
        if (icon === 'cancel') {
            return this.isPrimaryAction('cancel') ? 'thf-icon-close' : '';
        }
        if (icon === 'saveNew') {
            return this.isPrimaryAction('saveNew') ? 'thf-icon-ok' : '';
        }
        return '';
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ThfPageEditComponent.prototype.getType = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        /** @type {?} */
        var isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');
        /** @type {?} */
        var isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');
        return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';
    };
    /**
     * @return {?}
     */
    ThfPageEditComponent.prototype.hasAnyAction = /**
     * @return {?}
     */
    function () {
        return hasAction('cancel', this.parentContext) || hasAction('saveNew', this.parentContext) || hasAction('save', this.parentContext);
    };
    /**
     * @return {?}
     */
    ThfPageEditComponent.prototype.hasPageHeader = /**
     * @return {?}
     */
    function () {
        return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));
    };
    /**
     * @private
     * @param {?} action
     * @return {?}
     */
    ThfPageEditComponent.prototype.isPrimaryAction = /**
     * @private
     * @param {?} action
     * @return {?}
     */
    function (action) {
        /** @type {?} */
        var hasSaveAction = !hasAction('save', this.parentContext);
        if (action === 'saveNew') {
            return hasSaveAction;
        }
        if (action === 'cancel') {
            return !hasAction('saveNew', this.parentContext) && hasSaveAction;
        }
        return false;
    };
    ThfPageEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-edit', template: "<thf-page> <!-- HEADER --> <thf-page-header *ngIf=\"hasPageHeader()\" [t-breadcrumb]=\"breadcrumb\" [t-title]=\"title\"> <!-- OPERATIONS --> <div *ngIf=\"hasAnyAction()\" class=\"thf-page-header-actions\"> <thf-button *ngIf=\"hasAction('cancel', parentContext)\" [t-icon]=\"getIcon('cancel')\" [t-label]=\"literals.cancel\" [t-type]=\"getType('cancel')\" (t-click)=\"callAction('cancel', parentContext)\"> </thf-button> <thf-button *ngIf=\"hasAction('saveNew', parentContext)\" [t-disabled]=\"disableSubmit\" [t-icon]=\"getIcon('saveNew')\" [t-label]=\"literals.saveNew\" [t-type]=\"getType('saveNew')\" (t-click)=\"callAction('saveNew', parentContext)\"> </thf-button> <thf-button *ngIf=\"hasAction('save', parentContext)\" t-icon=\"thf-icon-ok\" t-type=\"primary\" [t-disabled]=\"disableSubmit\" [t-label]=\"literals.save\" (t-click)=\"callAction('save', parentContext)\"> </thf-button> </div> </thf-page-header> <!-- CONTENT --> <thf-page-content> <ng-content> </ng-content> </thf-page-content> </thf-page> "
                },] },
    ];
    /** @nocollapse */
    ThfPageEditComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    return ThfPageEditComponent;
}(ThfPageEditBaseComponent));
export { ThfPageEditComponent };
if (false) {
    /** @type {?} */
    ThfPageEditComponent.prototype.hasAction;
    /** @type {?} */
    ThfPageEditComponent.prototype.callAction;
    /**
     * @type {?}
     * @private
     */
    ThfPageEditComponent.prototype.parentContext;
}
