[{"__symbolic":"module","version":4,"metadata":{"ThfPageListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./thf-page-list-base.component","name":"ThfPageListBaseComponent","line":35,"character":42},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"thf-page-list","template":"<thf-page> <!-- HEADER --> <thf-page-header *ngIf=\"hasPageHeader()\" [class.thf-page-list-header-padding]=\"filter && !actions.length\" [t-breadcrumb]=\"breadcrumb\" [t-title]=\"title\"> <!-- OPERATIONS --> <div class=\"thf-page-list-operations\"> <div class=\"thf-page-list-actions\" [class.thf-page-list-actions-padding]=\"filter\"> <thf-button *ngIf=\"actions[0]\" t-type=\"primary\" [t-disabled]=\"actionIsDisabled(actions[0])\" [t-icon]=\"actions[0].icon\" [t-label]=\"actions[0].label\" (t-click)=\"callAction(actions[0])\"> </thf-button> <thf-button *ngIf=\"actions[1] && (actions.length === 2 || !isMobile)\" [t-disabled]=\"actionIsDisabled(actions[1])\" [t-label]=\"actions[1].label\" (t-click)=\"callAction(actions[1])\"> </thf-button> <thf-button *ngIf=\"actions.length == 3 && actions[2] && !isMobile\" [t-disabled]=\"actionIsDisabled(actions[2])\" [t-label]=\"actions[2].label\" (t-click)=\"callAction(actions[2])\"> </thf-button> <thf-dropdown *ngIf=\"actions.length > limitPrimaryActions\" [t-actions]=\"dropdownActions\" [t-label]=\"literals.otherActions\"> </thf-dropdown> </div> <!-- FILTER --> <div class=\"thf-page-list-filter-wrapper\" *ngIf=\"filter\"> <div class=\"thf-field-container-content thf-page-filter-content\"> <div class=\"thf-field-icon-container-right\"> <span class=\"thf-icon thf-icon-search thf-field-icon\" (click)=\"callActionFilter('action')\"> </span> </div> <input class=\"thf-input thf-input-icon-right\" name=\"model\" type=\"text\" [ngModel]=\"parentRef[filter.ngModel]\" [placeholder]=\"filter.placeholder || ''\" (keypress)=\"onkeypress($event.keyCode)\" (ngModelChange)=\"changeModel($event)\"> </div> <div class=\"thf-page-list-filter-search\" *ngIf=\"filter.advancedAction\"> <span class=\"thf-page-list-filter-search-link\" tabindex=\"0\" (click)=\"callActionFilter('advancedAction')\" (keydown.enter)=\"callActionFilter('advancedAction')\"> {{advancedSearch}} </span> </div> </div> </div> <!-- DISCLAIMER --> <thf-disclaimer-group *ngIf=\"!!disclaimerGroup\" [class.thf-page-list-disclaimer-group]=\"!!disclaimerGroup?.disclaimers?.length\" [t-disclaimers]=\"disclaimerGroup?.disclaimers\" [t-hide-remove-all]=\"disclaimerGroup?.hideRemoveAll\" [t-title]=\"disclaimerGroup?.title\" (t-change)=\"onChangeDisclaimerGroup($event)\"> </thf-disclaimer-group> </thf-page-header> <!-- CONTENT --> <thf-page-content> <ng-content></ng-content> </thf-page-content> </thf-page> "}]}],"members":{"thfPageContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":48,"character":3},"arguments":[{"__symbolic":"reference","module":"../thf-page-content/thf-page-content.component","name":"ThfPageContentComponent","line":48,"character":13}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":51,"character":13},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":52,"character":21},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":53,"character":20}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"actionIsDisabled":[{"__symbolic":"method"}],"callAction":[{"__symbolic":"method"}],"hasPageHeader":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"setIsMobile":[{"__symbolic":"method"}],"setDropdownActions":[{"__symbolic":"method"}],"callActionFilter":[{"__symbolic":"method"}],"initFixedLiterals":[{"__symbolic":"method"}],"onkeypress":[{"__symbolic":"method"}],"changeModel":[{"__symbolic":"method"}],"onChangeDisclaimerGroup":[{"__symbolic":"method"}],"initializeListeners":[{"__symbolic":"method"}],"removeListeners":[{"__symbolic":"method"}]}}}}]