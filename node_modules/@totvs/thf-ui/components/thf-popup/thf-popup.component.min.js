var __extends=this&&this.__extends||function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import{ChangeDetectorRef,Component,ElementRef,Renderer2,ViewChild,ViewContainerRef}from"@angular/core";import{Router}from"@angular/router";import{callFunction,isExternalLink,isTypeof,openExternalLink}from"../../utils/util";import{ThfControlPositionService}from"../../services/thf-control-position/thf-control-position.service";import{ThfPopupBaseComponent}from"./thf-popup-base.component";var ThfPopupComponent=function(t){function e(e,o,n,i,r){var s=t.call(this)||this;return s.renderer=o,s.router=n,s.thfControlPosition=i,s.changeDetector=r,s.onScroll=function(){s.showPopup&&s.close()},s.parentRef=e._view.component,s}return __extends(e,t),e.prototype.close=function(){this.removeListeners(),this.showPopup=!1},e.prototype.onActionClick=function(t){var e=t&&!this.returnBooleanValue(t,"disabled");return t&&t.action&&e?(this.close(),callFunction(t.action,this.parentRef,this.param||t)):t&&t.url&&e?(this.close(),this.openUrl(t.url)):void 0},e.prototype.open=function(t){this.oldTarget=this.target,this.param=t,this.showPopup=!0,this.changeDetector.detectChanges(),this.validateInitialContent()},e.prototype.returnBooleanValue=function(t,e){return isTypeof(t[e],"function")?t[e](this.param||t):t[e]},e.prototype.toggle=function(t){this.showPopup&&this.oldTarget===this.target?this.close():this.open(t)},e.prototype.clickedOutDisabledItem=function(t){return!(this.elementContains(t.target,"thf-popup-item-disabled")||this.elementContains(t.target.parentElement,"thf-popup-item-disabled"))},e.prototype.clickedOutHeaderTemplate=function(t){var e=this.popupRef&&this.popupRef.nativeElement.querySelector("[t-popup-header-template]");return!(e&&e.contains(t.target))},e.prototype.clickedOutTarget=function(t){return this.target&&!this.target.contains(t.target)},e.prototype.closePopupOnClickout=function(t){this.clickedOutTarget(t)&&this.clickedOutDisabledItem(t)&&this.clickedOutHeaderTemplate(t)&&this.close()},e.prototype.elementContains=function(t,e){return t&&t.classList.contains(e)},e.prototype.hasContentToShow=function(){return!(!this.popupRef.nativeElement||!this.popupRef.nativeElement.clientHeight)},e.prototype.initializeListeners=function(){var t=this;this.resizeListener=this.renderer.listen("window","resize",function(){t.close()}),this.clickoutListener=this.renderer.listen("document","click",function(e){t.closePopupOnClickout(e)}),window.addEventListener("scroll",this.onScroll,!0)},e.prototype.openUrl=function(t){return isExternalLink(t)?openExternalLink(t):t?this.router.navigate([t]):void 0},e.prototype.removeListeners=function(){this.clickoutListener&&this.clickoutListener(),this.resizeListener&&this.resizeListener(),window.removeEventListener("scroll",this.onScroll,!0)},e.prototype.setPosition=function(){this.thfControlPosition.setElements(this.popupRef.nativeElement,8,this.target),this.renderer.setStyle(this.popupRef.nativeElement,"left","0"),this.thfControlPosition.adjustPosition(this.position),this.arrowDirection=this.thfControlPosition.getArrowDirection()},e.prototype.validateInitialContent=function(){this.hasContentToShow()?(this.setPosition(),this.initializeListeners()):this.close()},e.decorators=[{type:Component,args:[{selector:"thf-popup",template:'<div #popupRef class="thf-popup" *ngIf="showPopup"> <div *ngIf="!hideArrow" class="thf-popup-arrow thf-arrow-{{ arrowDirection }}"></div> <ng-content select="[t-popup-header-template]"></ng-content> <ng-container *ngFor="let action of actions; let actionIndex = index"> <div *ngIf="action.visible !== false" [class.thf-popup-item-default]="action.type !== \'danger\'" [class.thf-popup-item-danger]="action.type === \'danger\'" [class.thf-popup-item-disabled]="returnBooleanValue(action, \'disabled\')" [class.thf-popup-item-separator]="action.separator && actionIndex !== 0" [class.thf-popup-item-selected]="action.selected" (click)="onActionClick(action)"> <span *ngIf="action.icon" class="thf-icon {{ action.icon }} thf-popup-icon-item"></span> {{ action.label }} </div> </ng-container> </div> ',providers:[ThfControlPositionService]}]}],e.ctorParameters=function(){return[{type:ViewContainerRef},{type:Renderer2},{type:Router},{type:ThfControlPositionService},{type:ChangeDetectorRef}]},e.propDecorators={popupRef:[{type:ViewChild,args:["popupRef",{read:ElementRef}]}]},e}(ThfPopupBaseComponent);export{ThfPopupComponent};