/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para o conjunto de c√≠rculos que faz a passagem de itens do `thf-slide`.
 */
var ThfSlideCirclesComponent = /** @class */ (function () {
    function ThfSlideCirclesComponent() {
        /**
         * Evento emitido ao clicar em um controle.
         */
        this.click = new EventEmitter();
    }
    ThfSlideCirclesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-slide-circles', template: "<div class=\"thf-slide-circles\"> <ng-container *ngFor=\"let item of items; let index = index;\"> <div class=\"thf-slide-circle\" [class.thf-slide-active-circle]=\"index === currentSlideIndex\" (click)=\"click.emit(index)\"> </div> </ng-container> </div> "
                },] },
    ];
    ThfSlideCirclesComponent.propDecorators = {
        currentSlideIndex: [{ type: Input, args: ['t-current-slide-index',] }],
        items: [{ type: Input, args: ['t-items',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfSlideCirclesComponent;
}());
export { ThfSlideCirclesComponent };
if (false) {
    /**
     * Index do slide atual.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.currentSlideIndex;
    /**
     * Itens do slide.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.items;
    /**
     * Evento emitido ao clicar em um controle.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.click;
}
