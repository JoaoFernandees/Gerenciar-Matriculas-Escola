/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a seta que controla a passagem de itens do `thf-slide`.
 */
var ThfSlideControlComponent = /** @class */ (function () {
    function ThfSlideControlComponent() {
        /**
         * Evento emitido ao clicar em um controle.
         */
        this.click = new EventEmitter();
    }
    ThfSlideControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-slide-control', template: "<div class=\"thf-slide-control-{{control}}\"> <div class=\"thf-slide-arrow-circle\" (click)=\"click.emit();\"> <div class=\"thf-slide-arrow thf-slide-arrow-{{control}}\"></div> </div> </div> "
                },] },
    ];
    ThfSlideControlComponent.propDecorators = {
        control: [{ type: Input, args: ['t-control',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfSlideControlComponent;
}());
export { ThfSlideControlComponent };
if (false) {
    /**
     * Tipo de controle que aceita os valores: 'previous' e 'next'.
     * @type {?}
     */
    ThfSlideControlComponent.prototype.control;
    /**
     * Evento emitido ao clicar em um controle.
     * @type {?}
     */
    ThfSlideControlComponent.prototype.click;
}
