/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { isIEOrEdge } from '../../../utils/util';
import { ThfSlideContentTemplateDirective } from '../directives/thf-slide-content-template.directive';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para cada item do thf-slide.
 */
var ThfSlideItemComponent = /** @class */ (function () {
    function ThfSlideItemComponent() {
        this.isIEOrEdge = isIEOrEdge();
    }
    /**
     * @return {?}
     */
    ThfSlideItemComponent.prototype.setLinkType = /**
     * @return {?}
     */
    function () {
        if (!this.template && this.link) {
            return this.link.startsWith('http') ? 'externalLink' : 'internalLink';
        }
        return 'noLink';
    };
    ThfSlideItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-slide-item', template: "<div #slideItem class=\"thf-slide-item\" [class.thf-slide-item-background-image]=\"!template && isIEOrEdge\" [style.background-image]=\"!template && isIEOrEdge ? 'url(' + image + ')' : ''\" [ngSwitch]=\"setLinkType()\"> <!-- slide com link interno --> <a *ngSwitchCase=\"'internalLink'\"  class=\"thf-slide-item-link\"  [routerLink]=\"link\"> <ng-container  [ngTemplateOutlet]=\"slideItemImage\"  [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\"> </ng-container> </a> <!-- slide com link externo --> <a  *ngSwitchCase=\"'externalLink'\" class=\"thf-slide-item-link\"  [href]=\"link\"> <ng-container  [ngTemplateOutlet]=\"slideItemImage\"  [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\"> </ng-container> </a> <!-- slide sem link --> <a  *ngSwitchCase=\"'noLink'\" [ngClass]=\"action ? 'thf-slide-item-link' : 'thf-slide-item-no-link'\" (click)=\"action ? action(data) : undefined\"> <ng-container  [ngTemplateOutlet]=\"template ? slideItemTemplate : slideItemImage\" [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image, data: data }}\"> </ng-container> </a> </div> <ng-template #slideItemTemplate let-item='item'> <div *ngIf=\"template\" class=\"thf-slide-item-content\"> <ng-template [ngTemplateOutlet]=\"template.templateRef\" [ngTemplateOutletContext]=\"{ $implicit: item.data, index: index }\"> </ng-template> </div> </ng-template> <ng-template #slideItemImage let-item='item'> <img *ngIf=\"item.image && !isIEOrEdge\" class=\"thf-slide-image\" [alt]=\"item.alt\" [src]=\"item.image\" [style.height.px]=\"imageHeight\"> </ng-template> "
                },] },
    ];
    ThfSlideItemComponent.propDecorators = {
        itemElement: [{ type: ViewChild, args: ['slideItem',] }],
        action: [{ type: Input, args: ['t-action',] }],
        alt: [{ type: Input, args: ['t-alt',] }],
        data: [{ type: Input, args: ['t-data',] }],
        image: [{ type: Input, args: ['t-image',] }],
        imageHeight: [{ type: Input, args: ['t-image-height',] }],
        template: [{ type: Input, args: ['t-template',] }],
        link: [{ type: Input, args: ['t-link',] }]
    };
    return ThfSlideItemComponent;
}());
export { ThfSlideItemComponent };
if (false) {
    /** @type {?} */
    ThfSlideItemComponent.prototype.itemElement;
    /** @type {?} */
    ThfSlideItemComponent.prototype.isIEOrEdge;
    /**
     * Ação executada ao clicar em uma imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.action;
    /**
     * Texto alternativo quando a imagem não é encontrada
     * @type {?}
     */
    ThfSlideItemComponent.prototype.alt;
    /**
     * Dados para o template customizado
     * @type {?}
     */
    ThfSlideItemComponent.prototype.data;
    /**
     * Caminho da imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.image;
    /**
     * Altura da imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.imageHeight;
    /**
     * Template customizado
     * @type {?}
     */
    ThfSlideItemComponent.prototype.template;
    /**
     * Link executado ao clicar em uma imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.link;
}
