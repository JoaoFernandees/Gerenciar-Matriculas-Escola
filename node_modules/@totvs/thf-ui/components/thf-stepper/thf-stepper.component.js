var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ThfStepperBaseComponent } from './thf-stepper-base.component';
import { ThfStepperStatus } from './thf-stepper-status.enum';
/**
 * \@docsExtends ThfStepperBaseComponent
 *
 * \@example
 *
 * <example name="thf-stepper-basic" title="Totvs Stepper Basic">
 *  <file name="sample-thf-stepper-basic/sample-thf-stepper-basic.component.html"> </file>
 *  <file name="sample-thf-stepper-basic/sample-thf-stepper-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-stepper-labs" title="Totvs Stepper Labs">
 *  <file name="sample-thf-stepper-labs/sample-thf-stepper-labs.component.html"> </file>
 *  <file name="sample-thf-stepper-labs/sample-thf-stepper-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-stepper-sales" title="Totvs Stepper - Sales">
 *  <file name="sample-thf-stepper-sales/sample-thf-stepper-sales.component.html"> </file>
 *  <file name="sample-thf-stepper-sales/sample-thf-stepper-sales.component.ts"> </file>
 * </example>
 */
var ThfStepperComponent = /** @class */ (function (_super) {
    __extends(ThfStepperComponent, _super);
    function ThfStepperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} stepNumber
     * @return {?}
     */
    ThfStepperComponent.prototype.changeStep = /**
     * @param {?} stepNumber
     * @return {?}
     */
    function (stepNumber) {
        if (stepNumber !== this.step && this.canJumpStep(stepNumber)) {
            this.onChangeStep.emit(stepNumber);
        }
    };
    /**
     * @param {?} stepNumber
     * @return {?}
     */
    ThfStepperComponent.prototype.canJumpStep = /**
     * @param {?} stepNumber
     * @return {?}
     */
    function (stepNumber) {
        if (!this.sequential) {
            return true;
        }
        return this.steps.slice(this.step, stepNumber - 1)
            .every(function (step) { return step.status === ThfStepperStatus.Done; });
    };
    ThfStepperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-stepper', template: "<div class=\"thf-stepper-card-content\"> <div class=\"thf-stepper thf-stepper-{{mode}}\"> <div *ngFor=\"let step of steps; let i = index\" class=\"thf-stepper-step thf-stepper-step-{{step.status}}\" (click)=\"changeStep(i+1)\"> <div class=\"thf-stepper-circle thf-stepper-{{i < 9 ? 'one-digit' : 'two-digits'}}\"> <span class=\"thf-stepper-number\">{{i+1}}</span> </div> <div class=\"thf-stepper-title\"> {{step.label}} </div> <div class=\"thf-stepper-bar-{{barLeftTop}}\"></div> <div class=\"thf-stepper-bar-{{barRightBottom}}\"></div> </div> </div> </div> "
                },] },
    ];
    return ThfStepperComponent;
}(ThfStepperBaseComponent));
export { ThfStepperComponent };
