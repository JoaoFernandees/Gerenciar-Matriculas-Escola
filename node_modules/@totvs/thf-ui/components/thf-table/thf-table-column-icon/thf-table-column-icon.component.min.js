import{Component,Input}from"@angular/core";var ThfTableColumnIconComponent=function(){function o(){}return Object.defineProperty(o.prototype,"icons",{get:function(){return this._icons},set:function(o){this._icons=this.convertToColumnIcon(o)},enumerable:!0,configurable:!0}),o.prototype.getIconColorClass=function(o){var n=this.getIconColor(o)||this.getIconColor(this.column);return n?"thf-column-text-"+n:""},o.prototype.onIconClick=function(o){o.action?o.action(this.row,o):this.column.action&&this.column.action(this.row,o||this.column)},o.prototype.convertToColumnIcon=function(o){return o instanceof Array?o.map(function(o){return"string"==typeof o?{value:o}:o}):"string"==typeof o?[{value:o}]:[]},o.prototype.getIconColor=function(o){return"function"==typeof o.color?o.color(this.row,o):o.color},o.decorators=[{type:Component,args:[{selector:"thf-table-column-icon",template:'<ng-container *ngFor="let iconColumn of icons"> <span class="thf-icon" [class.thf-clickable]="iconColumn.action || column.action" [ngClass]="[getIconColorClass(iconColumn), iconColumn.icon || iconColumn.value]" (click)="onIconClick(iconColumn)"> </span> </ng-container> '}]}],o.propDecorators={column:[{type:Input,args:["t-column"]}],icons:[{type:Input,args:["t-icons"]}],row:[{type:Input,args:["t-row"]}]},o}();export{ThfTableColumnIconComponent};