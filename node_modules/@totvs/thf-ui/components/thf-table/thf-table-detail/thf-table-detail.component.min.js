import{Component,EventEmitter,Input,Output}from"@angular/core";import{DecimalPipe}from"@angular/common";import{capitalizeFirstLetter,isTypeof}from"../../../utils/util";var ThfTableDetailComponent=function(){function e(e){this.decimalPipe=e,this.hasCheckbox=!1,this.selectRow=new EventEmitter}return Object.defineProperty(e.prototype,"detail",{get:function(){return this._detail},set:function(e){this._detail=this.returnThfTableDetailObject(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"detailColumns",{get:function(){return this.detail&&this.detail.columns||[]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"typeHeaderInline",{get:function(){return this.detail&&!this.detail.typeHeader||"inline"===this.detail.typeHeader},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"typeHeaderTop",{get:function(){return this.detail&&"top"===this.detail.typeHeader},enumerable:!0,configurable:!0}),e.prototype.formatNumberDetail=function(e,t){return t?this.decimalPipe.transform(e,t):e},e.prototype.getColumnTitleLabel=function(e){return e.label||capitalizeFirstLetter(e.property)},e.prototype.onSelectRow=function(e){e.$selected=!e.$selected,this.selectRow.emit(e)},e.prototype.returnThfTableDetailObject=function(e){if(e&&isTypeof(e,"object")){if(e.columns&&e.columns.forEach(function(e){return e.property=e.property||e.column}),Array.isArray(e))return{columns:e};if(e.columns)return e}},e.decorators=[{type:Component,args:[{selector:"thf-table-detail",template:'<table class="thf-table-master-detail"> <thead *ngIf="typeHeaderTop"> <tr> <th class="thf-table-header thf-table-column-checkbox" *ngIf="hasCheckbox"></th> <th class="thf-table-header thf-table-header-column thf-table-header-master-detail"></th> <th class="thf-table-header thf-table-header-ellipsis" *ngFor="let detail of detail.columns"> {{ getColumnTitleLabel(detail) }} </th> </tr> </thead> <tbody> <tr class="thf-table-detail-row" [class.thf-table-row-active]="item.$selected && hasCheckbox" *ngFor="let item of items"> <ng-container *ngIf="hasCheckbox; else masterDetailSpace"> <td class="thf-table-column-master-detail-space-checkbox"></td> <td class="thf-table-column thf-table-column-checkbox"> <input class="thf-table-checkbox" type="checkbox" [class.thf-table-checkbox-checked]="item.$selected"> <label class="thf-table-checkbox-label thf-clickable" (click)="onSelectRow(item)"> </label> </td> </ng-container> <ng-template #masterDetailSpace> <td class="thf-table-column-master-detail-space"></td> </ng-template> <td class="thf-table-column-master-detail thf-table-master-detail-label" (click)="hasCheckbox ? onSelectRow(item) : \'javascript:;\'" *ngFor="let detail of detailColumns"> <strong *ngIf="typeHeaderInline"> {{ getColumnTitleLabel(detail) }}: </strong> <ng-container [ngSwitch]="detail.type"> <span *ngSwitchCase="\'currency\'">{{ item[detail.property] | currency: detail.format:\'symbol\':\'1.2-2\' }}</span> <span *ngSwitchCase="\'date\'">{{ item[detail.property] | date: detail.format || \'dd/MM/yyyy\' }}</span> <span *ngSwitchCase="\'time\'">{{ item[detail.property] | thf_time: detail.format || \'HH:mm:ss.ffffff\' }}</span> <span *ngSwitchCase="\'dateTime\'">{{ item[detail.property] | date: detail.format || \'dd/MM/yyyy HH:mm:ss\' }}</span> <span *ngSwitchCase="\'number\'">{{ formatNumberDetail(item[detail.property], detail.format) }}</span> <span *ngSwitchDefault>{{ item[detail.property] }}</span> </ng-container> </td> </tr> </tbody> </table> '}]}],e.ctorParameters=function(){return[{type:DecimalPipe}]},e.propDecorators={hasCheckbox:[{type:Input,args:["t-checkbox"]}],detail:[{type:Input,args:["t-detail"]}],items:[{type:Input,args:["t-items"]}],selectRow:[{type:Output,args:["t-select-row"]}]},e}();export{ThfTableDetailComponent};