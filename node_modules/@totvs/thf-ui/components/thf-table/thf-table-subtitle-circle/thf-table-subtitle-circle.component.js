/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfColorPaletteService } from './../../../services/thf-color-palette/thf-color-palette.service';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação da representação da legenda, em formato de círculo.
 */
var ThfTableSubtitleCircleComponent = /** @class */ (function () {
    function ThfTableSubtitleCircleComponent(thfColorPaletteService) {
        this.thfColorPaletteService = thfColorPaletteService;
        /**
         * Esconde a tooltip.
         */
        this.hideTitle = false;
    }
    Object.defineProperty(ThfTableSubtitleCircleComponent.prototype, "subtitle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._subtitle;
        },
        /** Objeto com os dados da legenda. */
        set: /**
         * Objeto com os dados da legenda.
         * @param {?} subtitle
         * @return {?}
         */
        function (subtitle) {
            if (subtitle) {
                subtitle.color = this.thfColorPaletteService.getColor(subtitle);
            }
            this._subtitle = subtitle;
        },
        enumerable: true,
        configurable: true
    });
    ThfTableSubtitleCircleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-table-subtitle-circle', template: "<span [title]=\"hideTitle ? '' : subtitle?.label\" class=\"thf-table-subtitle-circle thf-{{ subtitle?.color }}\"> {{ subtitle?.content }} </span> "
                },] },
    ];
    /** @nocollapse */
    ThfTableSubtitleCircleComponent.ctorParameters = function () { return [
        { type: ThfColorPaletteService }
    ]; };
    ThfTableSubtitleCircleComponent.propDecorators = {
        subtitle: [{ type: Input, args: ['t-subtitle',] }],
        hideTitle: [{ type: Input, args: ['t-hide-title',] }]
    };
    return ThfTableSubtitleCircleComponent;
}());
export { ThfTableSubtitleCircleComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleCircleComponent.prototype._subtitle;
    /**
     * Esconde a tooltip.
     * @type {?}
     */
    ThfTableSubtitleCircleComponent.prototype.hideTitle;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleCircleComponent.prototype.thfColorPaletteService;
}
