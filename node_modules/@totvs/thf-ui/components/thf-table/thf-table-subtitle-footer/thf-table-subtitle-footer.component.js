/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um conjunto de legendas.
 */
var ThfTableSubtitleFooterComponent = /** @class */ (function () {
    function ThfTableSubtitleFooterComponent(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initializeResizeListener();
        this.debounceResize();
    };
    /**
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeResizeListener();
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.debounceResize = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(function () {
            _this.toggleShowCompleteSubtitle();
        });
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.getContainerSize = /**
     * @private
     * @return {?}
     */
    function () {
        return this.element.nativeElement.querySelector('.thf-table-subtitle-footer-container').offsetWidth;
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.getItemsSize = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var items = this.element.nativeElement.querySelectorAll('.thf-table-subtitle-footer');
        return Array.from(items).map(function (item) { return item['offsetWidth']; }).reduce(function (a, b) { return a + b; }, 16);
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.initializeResizeListener = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', function (event) {
            _this.debounceResize();
        });
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.removeResizeListener = /**
     * @private
     * @return {?}
     */
    function () {
        this.resizeListener();
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.toggleShowCompleteSubtitle = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var containerSize = this.getContainerSize();
        /** @type {?} */
        var itemsSize = this.getItemsSize();
        this.showSubtitle = itemsSize > containerSize;
    };
    ThfTableSubtitleFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-table-subtitle-footer', template: "<div class=\"thf-table-subtitle-footer-container\"> <div *ngFor=\"let subtitle of subtitles\" class=\"thf-table-subtitle-footer\"> <thf-table-subtitle-circle t-hide-title=\"true\" [t-subtitle]=\"subtitle\"> </thf-table-subtitle-circle> <span class=\"thf-table-subtitle-text\">{{ subtitle.label }}</span> </div> <thf-table-show-subtitle *ngIf=\"showSubtitle\" [t-literals]=\"literals\" [t-subtitles]=\"subtitles\"> </thf-table-show-subtitle> </div> "
                },] },
    ];
    /** @nocollapse */
    ThfTableSubtitleFooterComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ThfTableSubtitleFooterComponent.propDecorators = {
        literals: [{ type: Input, args: ['t-literals',] }],
        subtitles: [{ type: Input, args: ['t-subtitles',] }]
    };
    return ThfTableSubtitleFooterComponent;
}());
export { ThfTableSubtitleFooterComponent };
if (false) {
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.showSubtitle;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.timeoutResize;
    /**
     * @type {?}
     * @protected
     */
    ThfTableSubtitleFooterComponent.prototype.resizeListener;
    /**
     * Propriedade que recebe as literais definidas no `thf-table`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.literals;
    /**
     * Propriedade que recebe as legendas definidas no `ThfTableSubtitleCircleComponent`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.subtitles;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.element;
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.renderer;
}
