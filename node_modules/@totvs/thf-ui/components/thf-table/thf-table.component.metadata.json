[{"__symbolic":"module","version":4,"metadata":{"ThfTableComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./thf-table-base.component","name":"ThfTableBaseComponent","line":57,"character":39},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":53,"character":1},"arguments":[{"selector":"thf-table","template":"<thf-container #tableContainer t-no-padding> <div [class.thf-table-container-relative]=\"loading\"> <div *ngIf=\"loading\" class=\"thf-table-overlay\"> <thf-loading class=\"thf-table-overlay-content\" [t-text]=\"literals.loadingData\"></thf-loading> </div> <div class=\"thf-table-main-container\"> <div #tableWrapper class=\"thf-table-wrapper\" [class.thf-table-header-fixed-columns-pixels]=\"verifyWidthColumnsPixels()\" [style.opacity]=\"tableOpacity\"> <div class=\"thf-table-container\" *ngIf=\"height\" [style.height.px]=\"heightTableContainer\"> <div class=\"thf-table-header-fixed thf-table-header\"></div> <div class=\"thf-table-container-fixed-inner\"> <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container> </div> </div> <div *ngIf=\"!height\"> <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container> </div> </div> </div> </div> <div class=\"thf-table-footer\" *ngIf=\"hasItems() && getSubtitleColumns().length\"> <div *ngFor=\"let column of getSubtitleColumns()\"> <thf-table-subtitle-footer [t-literals]=\"literals\" [t-subtitles]=\"column.subtitles\"></thf-table-subtitle-footer> </div> </div> </thf-container> <div class=\"thf-row thf-table-footer-show-more\" [class.thf-invisible]=\"showMore.observers.length === 0\" #tableFooter> <thf-button class=\"thf-offset-xl-4 thf-offset-lg-4 thf-offset-md-3 thf-lg-4 thf-md-6\" [t-disabled]=\"showMoreDisabled\" [t-label]=\"literals.loadMoreData\" (t-click)=\"onShowMore()\"> </thf-button> </div> <ng-template #tableTemplate> <table class=\"thf-table\" [class.thf-table-striped]=\"striped\" [class.thf-table-layout-fixed]=\"hideTextOverflow\"> <thead> <tr [class.thf-table-header]=\"!height\"> <th *ngIf=\"checkbox && hasItems()\" class=\"thf-table-column-checkbox\"> <div [class.thf-table-header-fixed-inner]=\"height\"> <input *ngIf=\"!hideSelectAll\" type=\"checkbox\" class=\"thf-table-checkbox\" [class.thf-table-checkbox-checked]=\"selectAll\" [class.thf-table-checkbox-indeterminate]=\"selectAll === null\"> <label *ngIf=\"!hideSelectAll\" class=\"thf-table-checkbox-label thf-clickable\" (click)=\"selectAllRows()\"></label> </div> </th> <th *ngIf=\"hasItems() && !hideDetail && getColumnMasterDetail() !== undefined || hasRowTemplate\" class=\"thf-table-header-column thf-table-header-master-detail\"> </th> <th *ngIf=\"!hasColumns()\" class=\"thf-table-header-column thf-text-center\">{{ literals.noColumns }}</th> <th *ngFor=\"let column of getMainColumns(); let i = index\" #headersTable class=\"thf-table-header-ellipsis\" [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\" [class.thf-clickable]=\"sort\" [class.thf-table-column-right]= \"column.type === 'currency' || column.type === 'number'\" [class.thf-table-header-subtitle]=\"column.type === 'subtitle'\" (click)=\"sortColumn(column)\"> <div *ngIf=\"height\" class=\"thf-table-header-fixed-inner\"> <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container> </div> <div *ngIf=\"!height\"> <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container> </div> <ng-template #contentHeaderTemplate> <span *ngIf=\"sort\" [class.thf-table-header-icon-unselected]= \"sortedColumn?.property !== column\" [class.thf-table-header-icon-descending]= \"sortedColumn?.property === column && sortedColumn.ascending\" [class.thf-table-header-icon-ascending]= \"sortedColumn?.property === column && !sortedColumn.ascending\"> </span> <span class=\"thf-table-header-ellipsis thf-table-header-block\" [t-tooltip]=\"tooltipText\" (mouseenter)=\"tooltipMouseEnter($event)\" (mouseleave)=\"tooltipMouseLeave()\"> {{ getColumnTitleLabel(column) }} </span> </ng-template> </th> <th *ngIf=\"visibleActions.length > 1 && hasItems()\" class=\"thf-table-header-action\"></th> <th *ngIf=\"visibleActions.length === 1 && hasItems()\" class=\"thf-table-header-single-action\"></th> </tr> </thead> <tbody class=\"thf-table-group-row\" *ngIf=\"!hasItems()\"> <tr class=\"thf-table-row\"> <td [colSpan]=\"columnCount()\" class=\"thf-table-no-data thf-text-center\"> <span> {{ literals.noData }} </span> </td> </tr> </tbody> <tbody class=\"thf-table-group-row\" *ngFor=\"let row of items, let rowIndex = index;\"> <tr class=\"thf-table-row\" [class.thf-table-row-active]=\"row.$selected || row.$selected === null && checkbox\"> <td *ngIf=\"checkbox\" class=\"thf-table-column thf-table-column-checkbox\"> <ng-container *ngIf=\"singleSelect; then inputRadio; else inputCheckbox\"> </ng-container> <ng-template #inputRadio> <input type=\"radio\" class=\"thf-radio-group-input\" [class.thf-radio-group-input-checked]=\"row.$selected\"> <label class=\"thf-radio-group-label thf-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label> </ng-template> <ng-template #inputCheckbox> <input type=\"checkbox\" class=\"thf-table-checkbox\" [class.thf-table-checkbox-checked]=\"row.$selected\"> <label class=\"thf-table-checkbox-label thf-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label> </ng-template> </td> <td *ngIf=\"(getColumnMasterDetail() !== undefined) && !hideDetail || hasRowTemplate\" (click)=\"row.$showDetail = !row.$showDetail\" class=\"thf-table-column-detail-toggle\"> <span *ngIf=\"(containsMasterDetail(row) && !hasRowTemplate) || isShowRowTemplate(row, rowIndex) && hasRowTemplate\" [class.thf-icon-arrow-up]=\"row.$showDetail\" [class.thf-icon-arrow-down]=\"!row.$showDetail\" class=\"thf-icon thf-clickable\"> </span> </td> <td *ngFor=\"let column of getMainColumns(), let columnIndex = index;\" [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\" [class.thf-table-column]=\"column.type !== 'icon'\" [class.thf-table-column-right]=\"column.type == 'currency' || column.type == 'number'\" [class.thf-table-column-center]=\"column.type === 'subtitle'\" [class.thf-table-column-icons]=\"column.type === 'icon'\" [ngClass]=\"getClassColor(row, column)\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"> <div [class.thf-table-body-ellipsis]=\"hideTextOverflow\" [ngSwitch]=\"column.type\" [t-tooltip]=\"tooltipText\" (mouseenter)=\"tooltipMouseEnter($event)\" (mouseleave)=\"tooltipMouseLeave()\"> <span *ngSwitchCase=\"'boolean'\">{{ getBooleanLabel(row[column.property], column) }}</span> <span *ngSwitchCase=\"'currency'\">{{ row[column.property] | currency:column.format:'symbol':'1.2-2' }}</span> <span *ngSwitchCase=\"'date'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy' }}</span> <span *ngSwitchCase=\"'time'\" >{{ row[column.property] | thf_time: column.format || 'HH:mm:ss.ffffff' }}</span> <span *ngSwitchCase=\"'dateTime'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy HH:mm:ss' }}</span> <span *ngSwitchCase=\"'number'\">{{ formatNumber(row[column.property], column.format) }}</span> <span *ngSwitchCase=\"'link'\"> <a class=\"thf-table-link\" *ngIf=\"getTypeColumnLink(row, column) === 'action'\" (click)='column.action(row[column.property], row)'> {{ row[column.property] }} </a> <a class=\"thf-table-link\" *ngIf=\"getTypeColumnLink(row, column) === 'externalLink'\" [href]=\"row[column.link]\" target=\"_blank\"> {{ row[column.property] }} </a> <a class=\"thf-table-link\" *ngIf=\"getTypeColumnLink(row, column) === 'internalLink'\" [routerLink]=\"row[column.link]\"> {{ row[column.property] }} </a> </span> <span *ngSwitchCase=\"'icon'\"> <thf-table-column-icon [t-icons]=\"getColumnIcons(row, column)\" [t-column]=\"column\" [t-row]=\"row\"> </thf-table-column-icon> </span> <span *ngSwitchCase=\"'subtitle'\"> <thf-table-subtitle-circle [t-subtitle]=\"getSubtitleColumn(row, column)\"></thf-table-subtitle-circle> </span> <span *ngSwitchCase=\"'label'\"> <thf-table-column-label [t-value]=\"getColumnLabel(row, column)\"></thf-table-column-label> </span> <span *ngSwitchDefault>{{ row[column.property] }}</span> </div> </td> <td *ngIf=\"visibleActions.length === 1\" class=\"thf-table-column thf-table-column-single-action\"> <div *ngIf=\"firstAction.visible !== false\" class=\"thf-table-single-action thf-clickable\" [class.thf-table-action-disabled]= \"firstAction.disabled ? validateTableAction(row, firstAction) : false\" (click)=\"executeTableAction(row, firstAction)\"> <span *ngIf=\"firstAction.icon\" class=\"thf-icon {{ firstAction.icon }}\"></span> {{ firstAction.label }} </div> </td> <td *ngIf=\"visibleActions.length > 1\" class=\"thf-table-column-actions\"> <span #popupTarget class=\"thf-icon thf-icon-more thf-clickable\" (click)=\"togglePopup(row, popupTarget)\"> </span> </td> </tr> <tr *ngIf=\"hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)\"> <td class=\"thf-table-row-template-container\" [colSpan]=\"columnCountForMasterDetail()\"> <ng-template [ngTemplateOutlet]=\"tableRowTemplate.templateRef\" [ngTemplateOutletContext]=\"{ $implicit: row, rowIndex: rowIndex }\"> </ng-template> </td> </tr> <tr *ngIf=\"isShowMasterDetail(row)\"> <td class=\"thf-table-column-detail\" [colSpan]=\"columnCountForMasterDetail()\"> <thf-table-detail [t-checkbox]=\"checkbox && !detailHideSelect\" [t-detail]=\"getColumnMasterDetail().detail\" [t-items]=\"row[getNameColumnDetail()]\" (t-select-row)=\"selectDetailRow($event)\"> </thf-table-detail> </td> </tr> </tbody> </table> <thf-popup #popup [t-actions]=\"actions\" [t-target]=\"popupTarget\"> </thf-popup> </ng-template> ","providers":[{"__symbolic":"reference","module":"../../services/thf-date/thf-date.service","name":"ThfDateService","line":55,"character":14}]}]}],"members":{"tableRowTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":59,"character":3},"arguments":[{"__symbolic":"reference","module":"./thf-table-row-template/thf-table-row-template.directive","name":"ThfTableRowTemplateDirective","line":59,"character":16}]}]}],"thfPopupComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":61,"character":3},"arguments":["popup"]}]}],"tableContainerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":63,"character":3},"arguments":["tableContainer",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":63,"character":39}}]}]}],"tableFooterElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":64,"character":3},"arguments":["tableFooter",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":64,"character":36}}]}]}],"tableWrapperElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":65,"character":3},"arguments":["tableWrapper",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":65,"character":37}}]}]}],"actionsIconElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":67,"character":3},"arguments":["actionsIconElement",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":67,"character":46}}]}]}],"actionsElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":68,"character":3},"arguments":["actionsElement",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":68,"character":42}}]}]}],"headersTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":69,"character":3},"arguments":["headersTable"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../services/thf-date/thf-date.service","name":"ThfDateService","line":87,"character":13},{"__symbolic":"reference","module":"@angular/core","name":"IterableDiffers","line":88,"character":13},{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":89,"character":13},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":90,"character":14},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":91,"character":28},{"__symbolic":"reference","module":"@angular/common","name":"DecimalPipe","line":92,"character":25},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":94,"character":20}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"executeTableAction":[{"__symbolic":"method"}],"columnCountForMasterDetail":[{"__symbolic":"method"}],"columnCount":[{"__symbolic":"method"}],"formatNumber":[{"__symbolic":"method"}],"getSubtitleColumn":[{"__symbolic":"method"}],"getBooleanLabel":[{"__symbolic":"method"}],"getColumnIcons":[{"__symbolic":"method"}],"getColumnLabel":[{"__symbolic":"method"}],"getColumnTitleLabel":[{"__symbolic":"method"}],"verifyWidthColumnsPixels":[{"__symbolic":"method"}],"calculateWidthHeaders":[{"__symbolic":"method"}],"containsMasterDetail":[{"__symbolic":"method"}],"isShowRowTemplate":[{"__symbolic":"method"}],"isShowMasterDetail":[{"__symbolic":"method"}],"tooltipMouseEnter":[{"__symbolic":"method"}],"tooltipMouseLeave":[{"__symbolic":"method"}],"verifyChangeHeightInFooter":[{"__symbolic":"method"}],"verifyCalculateHeightTableContainer":[{"__symbolic":"method"}],"calculateHeightTableContainer":[{"__symbolic":"method"}],"getTypeColumnLink":[{"__symbolic":"method"}],"togglePopup":[{"__symbolic":"method"}],"showContainer":[{"__symbolic":"method"}],"checkChangesItems":[{"__symbolic":"method"}],"getHeightTableFooter":[{"__symbolic":"method"}],"hideContainer":[{"__symbolic":"method"}],"mergeCustomIcons":[{"__symbolic":"method"}],"validateTableAction":[{"__symbolic":"method"}],"debounceResize":[{"__symbolic":"method"}],"removeListeners":[{"__symbolic":"method"}],"setTableOpacity":[{"__symbolic":"method"}]}}}}]