var __extends=this&&this.__extends||function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import{ChangeDetectorRef,Component,ContentChild,ElementRef,IterableDiffers,QueryList,Renderer2,ViewChild,ViewChildren,ViewContainerRef}from"@angular/core";import{DecimalPipe}from"@angular/common";import{Router}from"@angular/router";import{capitalizeFirstLetter,convertToBoolean}from"../../utils/util";import{ThfDateService}from"../../services/thf-date/thf-date.service";import{ThfPopupComponent}from"../thf-popup/thf-popup.component";import{ThfTableBaseComponent}from"./thf-table-base.component";import{ThfTableRowTemplateDirective}from"./thf-table-row-template/thf-table-row-template.directive";var ThfTableComponent=function(t){function e(e,o,n,l,i,a,r){var s=t.call(this,e)||this;return s.changeDetector=i,s.decimalPipe=a,s.router=r,s.tableOpacity=0,s.initialized=!1,s.visibleElement=!1,s.parentRef=n._view.component,s.differ=o.find([]).create(null),s.clickListener=l.listen("document","click",function(){}),s.resizeListener=l.listen("window","resize",function(t){s.debounceResize()}),s}return __extends(e,t),Object.defineProperty(e.prototype,"detailHideSelect",{get:function(){var t=this.getColumnMasterDetail();return!(!t||!t.detail)&&t.detail.hideSelect},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"firstAction",{get:function(){return this.visibleActions&&this.visibleActions[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasRowTemplate",{get:function(){return!!this.tableRowTemplate},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visibleActions",{get:function(){return this.actions&&this.actions.filter(function(t){return!1!==t.visible})},enumerable:!0,configurable:!0}),e.prototype.ngAfterViewInit=function(){this.initialized=!0,this.container||this.hideContainer()},e.prototype.ngDoCheck=function(){this.checkChangesItems(),this.verifyCalculateHeightTableContainer(),this.tableWrapperElement.nativeElement.offsetWidth&&!this.visibleElement&&this.initialized&&(this.debounceResize(),this.visibleElement=!0)},e.prototype.ngOnDestroy=function(){this.removeListeners()},e.prototype.executeTableAction=function(t,e){t.disabled||this.validateTableAction(t,e)||("string"==typeof e.action?this.parentRef[e.action](t):e.action.call(this.parentRef,t),this.toggleRowAction(t))},e.prototype.columnCountForMasterDetail=function(){return this.getMainColumns().length+1+(this.actions.length>0?1:0)+(this.checkbox?1:0)},e.prototype.columnCount=function(){return this.getMainColumns().length+(this.actions.length>0?1:0)+(this.checkbox?1:0)+(this.hideDetail||void 0===this.getColumnMasterDetail()?0:1)},e.prototype.formatNumber=function(t,e){return e?this.decimalPipe.transform(t,e):t},e.prototype.getSubtitleColumn=function(t,e){return e.subtitles.find(function(o){return t[e.property]===o.value})},e.prototype.getBooleanLabel=function(t,e){return t||!1===t||0===t?(t=convertToBoolean(t),e.boolean?t?e.boolean.trueLabel||"Sim":e.boolean.falseLabel||"Não":t?"Sim":"Não"):t},e.prototype.getColumnIcons=function(t,e){var o=t[e.property];if(e.icons){if(o instanceof Array)return this.mergeCustomIcons(o,e.icons);if("string"==typeof o){var n=e.icons.find(function(t){return o===t.value});if(n)return[n]}}return o},e.prototype.getColumnLabel=function(t,e){return e.labels.find(function(o){return t[e.property]===o.value})},e.prototype.getColumnTitleLabel=function(t){return t.label||capitalizeFirstLetter(t.property)},e.prototype.verifyWidthColumnsPixels=function(){var t=this.getMainColumns();return!!t.length&&t.every(function(t){return t.width&&t.width.includes("px")})},e.prototype.calculateWidthHeaders=function(){var t=this;setTimeout(function(){t.height&&t.headersTable.forEach(function(t){var e=t.nativeElement.querySelector(".thf-table-header-fixed-inner");e&&(e.style.width=t.nativeElement.offsetWidth+"px")})})},e.prototype.containsMasterDetail=function(t){return t[this.getNameColumnDetail()]&&t[this.getNameColumnDetail()].length},e.prototype.isShowRowTemplate=function(t,e){return!this.tableRowTemplate||!this.tableRowTemplate.thfTableRowTemplateShow||this.tableRowTemplate.thfTableRowTemplateShow(t,e)},e.prototype.isShowMasterDetail=function(t){return!this.hideDetail&&this.getNameColumnDetail()&&t.$showDetail&&this.containsMasterDetail(t)&&!this.hasRowTemplate},e.prototype.tooltipMouseEnter=function(t){this.tooltipText=void 0,this.hideTextOverflow&&t.target.offsetWidth<t.target.scrollWidth&&t.target.innerText.trim()&&(this.tooltipText=t.target.innerText)},e.prototype.tooltipMouseLeave=function(){this.tooltipText=void 0},e.prototype.verifyChangeHeightInFooter=function(){return this.footerHeight!==this.getHeightTableFooter()},e.prototype.verifyCalculateHeightTableContainer=function(){this.height&&this.verifyChangeHeightInFooter()&&(this.footerHeight=this.getHeightTableFooter(),this.calculateHeightTableContainer(this.height))},e.prototype.calculateHeightTableContainer=function(t){var e=parseFloat(t);this.heightTableContainer=e?e-this.getHeightTableFooter():void 0,this.setTableOpacity(1),this.changeDetector.detectChanges()},e.prototype.getTypeColumnLink=function(t,e){var o;return e.action?"action":(o=t[e.link])&&o.startsWith("http")?"externalLink":"internalLink"},e.prototype.togglePopup=function(t,e){this.popupTarget=e,this.changeDetector.detectChanges(),this.thfPopupComponent.toggle(t)},e.prototype.showContainer=function(t){var e=this.tableContainerElement.nativeElement.firstChild.classList;e.add("thf-container"),"border"===t?e.add("thf-container-no-shadow"):e.remove("thf-container-no-shadow")},e.prototype.checkChangesItems=function(){var t=this.differ.diff(this.items);t&&this.selectAll&&(this.selectAll=null),t&&!this.hasColumns()&&this.hasItems()&&(this.columns=this.getDefaultColumns(this.items[0]))},e.prototype.getHeightTableFooter=function(){return this.tableFooterElement?this.tableFooterElement.nativeElement.offsetHeight:0},e.prototype.hideContainer=function(){this.tableContainerElement.nativeElement.firstChild.classList.remove("thf-container")},e.prototype.mergeCustomIcons=function(t,e){var o=[];return t.forEach(function(t){var n=e.find(function(e){return t===e.icon||t===e.value});n?o.push(n):o.push(t)}),o},e.prototype.validateTableAction=function(t,e){return"function"==typeof e.disabled?e.disabled.call(this.parentRef,t):e.disabled},e.prototype.debounceResize=function(){var t=this;clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(function(){t.calculateWidthHeaders(),t.setTableOpacity(1)})},e.prototype.removeListeners=function(){this.resizeListener&&this.resizeListener(),this.clickListener&&this.clickListener()},e.prototype.setTableOpacity=function(t){this.tableOpacity=t},e.decorators=[{type:Component,args:[{selector:"thf-table",template:'<thf-container #tableContainer t-no-padding> <div [class.thf-table-container-relative]="loading"> <div *ngIf="loading" class="thf-table-overlay"> <thf-loading class="thf-table-overlay-content" [t-text]="literals.loadingData"></thf-loading> </div> <div class="thf-table-main-container"> <div #tableWrapper class="thf-table-wrapper" [class.thf-table-header-fixed-columns-pixels]="verifyWidthColumnsPixels()" [style.opacity]="tableOpacity"> <div class="thf-table-container" *ngIf="height" [style.height.px]="heightTableContainer"> <div class="thf-table-header-fixed thf-table-header"></div> <div class="thf-table-container-fixed-inner"> <ng-container *ngTemplateOutlet="tableTemplate"></ng-container> </div> </div> <div *ngIf="!height"> <ng-container *ngTemplateOutlet="tableTemplate"></ng-container> </div> </div> </div> </div> <div class="thf-table-footer" *ngIf="hasItems() && getSubtitleColumns().length"> <div *ngFor="let column of getSubtitleColumns()"> <thf-table-subtitle-footer [t-literals]="literals" [t-subtitles]="column.subtitles"></thf-table-subtitle-footer> </div> </div> </thf-container> <div class="thf-row thf-table-footer-show-more" [class.thf-invisible]="showMore.observers.length === 0" #tableFooter> <thf-button class="thf-offset-xl-4 thf-offset-lg-4 thf-offset-md-3 thf-lg-4 thf-md-6" [t-disabled]="showMoreDisabled" [t-label]="literals.loadMoreData" (t-click)="onShowMore()"> </thf-button> </div> <ng-template #tableTemplate> <table class="thf-table" [class.thf-table-striped]="striped" [class.thf-table-layout-fixed]="hideTextOverflow"> <thead> <tr [class.thf-table-header]="!height"> <th *ngIf="checkbox && hasItems()" class="thf-table-column-checkbox"> <div [class.thf-table-header-fixed-inner]="height"> <input *ngIf="!hideSelectAll" type="checkbox" class="thf-table-checkbox" [class.thf-table-checkbox-checked]="selectAll" [class.thf-table-checkbox-indeterminate]="selectAll === null"> <label *ngIf="!hideSelectAll" class="thf-table-checkbox-label thf-clickable" (click)="selectAllRows()"></label> </div> </th> <th *ngIf="hasItems() && !hideDetail && getColumnMasterDetail() !== undefined || hasRowTemplate" class="thf-table-header-column thf-table-header-master-detail"> </th> <th *ngIf="!hasColumns()" class="thf-table-header-column thf-text-center">{{ literals.noColumns }}</th> <th *ngFor="let column of getMainColumns(); let i = index" #headersTable class="thf-table-header-ellipsis" [style.width]="column.width" [style.max-width]="column.width" [style.min-width]="column.width" [class.thf-clickable]="sort" [class.thf-table-column-right]= "column.type === \'currency\' || column.type === \'number\'" [class.thf-table-header-subtitle]="column.type === \'subtitle\'" (click)="sortColumn(column)"> <div *ngIf="height" class="thf-table-header-fixed-inner"> <ng-container *ngTemplateOutlet="contentHeaderTemplate"></ng-container> </div> <div *ngIf="!height"> <ng-container *ngTemplateOutlet="contentHeaderTemplate"></ng-container> </div> <ng-template #contentHeaderTemplate> <span *ngIf="sort" [class.thf-table-header-icon-unselected]= "sortedColumn?.property !== column" [class.thf-table-header-icon-descending]= "sortedColumn?.property === column && sortedColumn.ascending" [class.thf-table-header-icon-ascending]= "sortedColumn?.property === column && !sortedColumn.ascending"> </span> <span class="thf-table-header-ellipsis thf-table-header-block" [t-tooltip]="tooltipText" (mouseenter)="tooltipMouseEnter($event)" (mouseleave)="tooltipMouseLeave()"> {{ getColumnTitleLabel(column) }} </span> </ng-template> </th> <th *ngIf="visibleActions.length > 1 && hasItems()" class="thf-table-header-action"></th> <th *ngIf="visibleActions.length === 1 && hasItems()" class="thf-table-header-single-action"></th> </tr> </thead> <tbody class="thf-table-group-row" *ngIf="!hasItems()"> <tr class="thf-table-row"> <td [colSpan]="columnCount()" class="thf-table-no-data thf-text-center"> <span> {{ literals.noData }} </span> </td> </tr> </tbody> <tbody class="thf-table-group-row" *ngFor="let row of items, let rowIndex = index;"> <tr class="thf-table-row" [class.thf-table-row-active]="row.$selected || row.$selected === null && checkbox"> <td *ngIf="checkbox" class="thf-table-column thf-table-column-checkbox"> <ng-container *ngIf="singleSelect; then inputRadio; else inputCheckbox"> </ng-container> <ng-template #inputRadio> <input type="radio" class="thf-radio-group-input" [class.thf-radio-group-input-checked]="row.$selected"> <label class="thf-radio-group-label thf-clickable" (click)="checkbox ? selectRow(row) : \'javascript:;\'"></label> </ng-template> <ng-template #inputCheckbox> <input type="checkbox" class="thf-table-checkbox" [class.thf-table-checkbox-checked]="row.$selected"> <label class="thf-table-checkbox-label thf-clickable" (click)="checkbox ? selectRow(row) : \'javascript:;\'"></label> </ng-template> </td> <td *ngIf="(getColumnMasterDetail() !== undefined) && !hideDetail || hasRowTemplate" (click)="row.$showDetail = !row.$showDetail" class="thf-table-column-detail-toggle"> <span *ngIf="(containsMasterDetail(row) && !hasRowTemplate) || isShowRowTemplate(row, rowIndex) && hasRowTemplate" [class.thf-icon-arrow-up]="row.$showDetail" [class.thf-icon-arrow-down]="!row.$showDetail" class="thf-icon thf-clickable"> </span> </td> <td *ngFor="let column of getMainColumns(), let columnIndex = index;" [style.width]="column.width" [style.max-width]="column.width" [style.min-width]="column.width" [class.thf-table-column]="column.type !== \'icon\'" [class.thf-table-column-right]="column.type == \'currency\' || column.type == \'number\'" [class.thf-table-column-center]="column.type === \'subtitle\'" [class.thf-table-column-icons]="column.type === \'icon\'" [ngClass]="getClassColor(row, column)" (click)="checkbox ? selectRow(row) : \'javascript:;\'"> <div [class.thf-table-body-ellipsis]="hideTextOverflow" [ngSwitch]="column.type" [t-tooltip]="tooltipText" (mouseenter)="tooltipMouseEnter($event)" (mouseleave)="tooltipMouseLeave()"> <span *ngSwitchCase="\'boolean\'">{{ getBooleanLabel(row[column.property], column) }}</span> <span *ngSwitchCase="\'currency\'">{{ row[column.property] | currency:column.format:\'symbol\':\'1.2-2\' }}</span> <span *ngSwitchCase="\'date\'" >{{ row[column.property] | date: column.format || \'dd/MM/yyyy\' }}</span> <span *ngSwitchCase="\'time\'" >{{ row[column.property] | thf_time: column.format || \'HH:mm:ss.ffffff\' }}</span> <span *ngSwitchCase="\'dateTime\'" >{{ row[column.property] | date: column.format || \'dd/MM/yyyy HH:mm:ss\' }}</span> <span *ngSwitchCase="\'number\'">{{ formatNumber(row[column.property], column.format) }}</span> <span *ngSwitchCase="\'link\'"> <a class="thf-table-link" *ngIf="getTypeColumnLink(row, column) === \'action\'" (click)=\'column.action(row[column.property], row)\'> {{ row[column.property] }} </a> <a class="thf-table-link" *ngIf="getTypeColumnLink(row, column) === \'externalLink\'" [href]="row[column.link]" target="_blank"> {{ row[column.property] }} </a> <a class="thf-table-link" *ngIf="getTypeColumnLink(row, column) === \'internalLink\'" [routerLink]="row[column.link]"> {{ row[column.property] }} </a> </span> <span *ngSwitchCase="\'icon\'"> <thf-table-column-icon [t-icons]="getColumnIcons(row, column)" [t-column]="column" [t-row]="row"> </thf-table-column-icon> </span> <span *ngSwitchCase="\'subtitle\'"> <thf-table-subtitle-circle [t-subtitle]="getSubtitleColumn(row, column)"></thf-table-subtitle-circle> </span> <span *ngSwitchCase="\'label\'"> <thf-table-column-label [t-value]="getColumnLabel(row, column)"></thf-table-column-label> </span> <span *ngSwitchDefault>{{ row[column.property] }}</span> </div> </td> <td *ngIf="visibleActions.length === 1" class="thf-table-column thf-table-column-single-action"> <div *ngIf="firstAction.visible !== false" class="thf-table-single-action thf-clickable" [class.thf-table-action-disabled]= "firstAction.disabled ? validateTableAction(row, firstAction) : false" (click)="executeTableAction(row, firstAction)"> <span *ngIf="firstAction.icon" class="thf-icon {{ firstAction.icon }}"></span> {{ firstAction.label }} </div> </td> <td *ngIf="visibleActions.length > 1" class="thf-table-column-actions"> <span #popupTarget class="thf-icon thf-icon-more thf-clickable" (click)="togglePopup(row, popupTarget)"> </span> </td> </tr> <tr *ngIf="hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)"> <td class="thf-table-row-template-container" [colSpan]="columnCountForMasterDetail()"> <ng-template [ngTemplateOutlet]="tableRowTemplate.templateRef" [ngTemplateOutletContext]="{ $implicit: row, rowIndex: rowIndex }"> </ng-template> </td> </tr> <tr *ngIf="isShowMasterDetail(row)"> <td class="thf-table-column-detail" [colSpan]="columnCountForMasterDetail()"> <thf-table-detail [t-checkbox]="checkbox && !detailHideSelect" [t-detail]="getColumnMasterDetail().detail" [t-items]="row[getNameColumnDetail()]" (t-select-row)="selectDetailRow($event)"> </thf-table-detail> </td> </tr> </tbody> </table> <thf-popup #popup [t-actions]="actions" [t-target]="popupTarget"> </thf-popup> </ng-template> ',providers:[ThfDateService]}]}],e.ctorParameters=function(){return[{type:ThfDateService},{type:IterableDiffers},{type:ViewContainerRef},{type:Renderer2},{type:ChangeDetectorRef},{type:DecimalPipe},{type:Router}]},e.propDecorators={tableRowTemplate:[{type:ContentChild,args:[ThfTableRowTemplateDirective]}],thfPopupComponent:[{type:ViewChild,args:["popup"]}],tableContainerElement:[{type:ViewChild,args:["tableContainer",{read:ElementRef}]}],tableFooterElement:[{type:ViewChild,args:["tableFooter",{read:ElementRef}]}],tableWrapperElement:[{type:ViewChild,args:["tableWrapper",{read:ElementRef}]}],actionsIconElement:[{type:ViewChildren,args:["actionsIconElement",{read:ElementRef}]}],actionsElement:[{type:ViewChildren,args:["actionsElement",{read:ElementRef}]}],headersTable:[{type:ViewChildren,args:["headersTable"]}]},e}(ThfTableBaseComponent);export{ThfTableComponent};