var __extends=this&&this.__extends||function(){var t=function(e,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a])})(e,a)};return function(e,a){function n(){this.constructor=e}t(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}}();import{ChangeDetectorRef,Component,ContentChildren,QueryList}from"@angular/core";import{ThfTabComponent}from"./thf-tab/thf-tab.component";import{ThfTabsBaseComponent}from"./thf-tabs-base.component";var thfTabsMaxNumberOfTabs=5,ThfTabsComponent=function(t){function e(e){var a=t.call(this)||this;return a.changeDetector=e,a.maxNumberOfTabs=thfTabsMaxNumberOfTabs,a}return __extends(e,t),Object.defineProperty(e.prototype,"isShowTabDropdown",{get:function(){return this.visibleTabs.length>this.maxNumberOfTabs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"overflowedTabs",{get:function(){var t=this;return this.visibleTabs.filter(function(e,a){return a>t.maxNumberOfTabs-2})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visibleTabs",{get:function(){return this.tabs.filter(function(t){return!t.hide})},enumerable:!0,configurable:!0}),e.prototype.isVisibleTab=function(t){var e=this.visibleTabs.findIndex(function(e){return e.id===t.id});return this.visibleTabs.length<=this.maxNumberOfTabs||e<this.maxNumberOfTabs-1},e.prototype.onTabActive=function(t){this.previousActiveTab=this.tabs.find(function(e){return e.active&&e.id!==t.id}),this.deactivateTab()},e.prototype.onTabChangeState=function(t){t.active&&(t.active=!1,this.activeDistinctTab(),this.changeDetector.detectChanges())},e.prototype.selectedTab=function(t){t.active=!0,t.click&&t.click.emit(t),this.changeDetector.detectChanges()},e.prototype.trackByFn=function(t,e){return e.id},e.prototype.activeDistinctTab=function(){this.previousActiveTab?this.previousActiveTab.active=!0:this.activeFirstTab()},e.prototype.activeFirstTab=function(){this.tabs.some(function(t){if(!t.disabled&&!t.hide)return t.active=!0,!0})},e.prototype.deactivateTab=function(){this.previousActiveTab&&(this.previousActiveTab.active=!1,this.changeDetector.detectChanges())},e.decorators=[{type:Component,args:[{selector:"thf-tabs",template:'<div class="thf-tabs-header"> <ng-container *ngFor="let tab of tabs; trackBy: trackByFn"> <thf-tab-button *ngIf="isVisibleTab(tab)" class="thf-tab-button" [t-active]="tab.active" [t-disabled]="tab.disabled" [t-id]="tab.id" [t-hide]="tab.hide" [t-label]="tab.label" [t-small]="small" (t-activated)="onTabActive(tab)" (t-change-state)="onTabChangeState(tab)" (t-click)="selectedTab(tab)"> </thf-tab-button> </ng-container> <thf-tab-dropdown *ngIf="isShowTabDropdown" class="thf-tab-button thf-tab-dropdown" t-label="Mais" [t-small]="small" [t-tabs]="overflowedTabs" (t-activated)="onTabActive($event)" (t-change-state)="onTabChangeState($event)" (t-click)="selectedTab($event)"> </thf-tab-dropdown> </div> <div class="thf-tabs-container"> <ng-content></ng-content> </div> '}]}],e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},e.propDecorators={tabs:[{type:ContentChildren,args:[ThfTabComponent]}]},e}(ThfTabsBaseComponent);export{ThfTabsComponent};