import{Input}from"@angular/core";import{convertToBoolean}from"../../utils/util";import{ThfTagIcon}from"./enums/thf-tag-icon.enum";import{ThfTagOrientation}from"./enums/thf-tag-orientation.enum";import{ThfTagType}from"./enums/thf-tag-type.enum";var thfTagOrientationDefault=ThfTagOrientation.Vertical,thfTagTypeDefault=ThfTagType.Info,ThfTagBaseComponent=function(){function t(){this._orientation=thfTagOrientationDefault,this._type=thfTagTypeDefault,this.thfTagOrientation=ThfTagOrientation}return Object.defineProperty(t.prototype,"icon",{get:function(){return this._icon},set:function(t){this._icon=""===t||convertToBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"orientation",{get:function(){return this._orientation},set:function(t){this._orientation=Object.values(ThfTagOrientation).includes(t)?t:thfTagOrientationDefault},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this._type},set:function(t){this._type=Object.values(ThfTagType).includes(t)?t:thfTagTypeDefault},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"iconFromType",{get:function(){switch(this.type){case ThfTagType.Danger:return ThfTagIcon.Danger;case ThfTagType.Info:return ThfTagIcon.Info;case ThfTagType.Success:return ThfTagIcon.Success;case ThfTagType.Warning:return ThfTagIcon.Warning}},enumerable:!0,configurable:!0}),t.propDecorators={label:[{type:Input,args:["t-label"]}],icon:[{type:Input,args:["t-icon"]}],orientation:[{type:Input,args:["t-orientation"]}],type:[{type:Input,args:["t-type"]}],value:[{type:Input,args:["t-value"]}]},t}();export{ThfTagBaseComponent};