/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToInt } from '../../utils/util';
/**
 * \@description
 *
 * O componente `thf-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.
 */
var ThfToolbarBaseComponent = /** @class */ (function () {
    function ThfToolbarBaseComponent() {
        /**
         * Se falso, oculta o ícone de notificações.
         */
        this.showNotification = true;
    }
    Object.defineProperty(ThfToolbarBaseComponent.prototype, "notificationNumber", {
        get: /**
         * @return {?}
         */
        function () {
            return this._notificationNumber;
        },
        /**
         * @optional
         *
         * @description
         *
         * Número de notificações.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Número de notificações.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._notificationNumber = convertToInt(value, 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfToolbarBaseComponent.prototype, "isShowProfile", {
        get: /**
         * @return {?}
         */
        function () {
            return this.profile || this.profileActions;
        },
        enumerable: true,
        configurable: true
    });
    ThfToolbarBaseComponent.propDecorators = {
        actions: [{ type: Input, args: ['t-actions',] }],
        actionsIcon: [{ type: Input, args: ['t-actions-icon',] }],
        profile: [{ type: Input, args: ['t-profile',] }],
        profileActions: [{ type: Input, args: ['t-profile-actions',] }],
        showNotification: [{ type: Input, args: ['t-show-notification',] }],
        title: [{ type: Input, args: ['t-title',] }],
        notificationActions: [{ type: Input, args: ['t-notification-actions',] }],
        notificationNumber: [{ type: Input, args: ['t-notification-number',] }]
    };
    return ThfToolbarBaseComponent;
}());
export { ThfToolbarBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfToolbarBaseComponent.prototype._notificationNumber;
    /**
     * \@optional
     *
     * \@description
     *
     * Define uma lista de ações que serão exibidas ao clicar no ícone declarado em `t-actions-icon`.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.actions;
    /**
     * \@optional
     *
     * \@description
     *
     * Define um [ícone](/guides/icons) para a propriedade `t-actions`.
     *
     * > Caso não haja ações definidas em `t-actions`, o ícone não será exibido.
     *
     * \@default `thf-icon-more`
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.actionsIcon;
    /**
     * Define o objeto que será o cabeçalho da lista de ações com as informações do perfil.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.profile;
    /**
     * Define uma lista de ações que serão exibidas ao clicar no ícone do perfil.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.profileActions;
    /**
     * Se falso, oculta o ícone de notificações.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.showNotification;
    /**
     * Título do *toolbar* e aplicação.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.title;
    /**
     * \@optional
     *
     * \@description
     *
     * Lista de ações da notificação.
     * @type {?}
     */
    ThfToolbarBaseComponent.prototype.notificationActions;
}
