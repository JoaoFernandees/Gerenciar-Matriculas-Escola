/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';
/**
 * \@docsPrivate
 *
 * \@usedBy ThfToolbarComponent
 *
 * \@description
 *
 * O componente `thf-toolbar-notification` tem como objetivo notificar o usuário de novas ações da aplicação que necessitam de atenção,
 * como por exemplo um alerta de nova mensagem.
 *
 * O mesmo também permite que a cada nova notificação seja incrementado e exibido, ou não, este número em uma *tag* ao lado do
 * ícone de notificações.
 */
var ThfToolbarNotificationComponent = /** @class */ (function () {
    function ThfToolbarNotificationComponent() {
        this._notificationNumber = 0;
    }
    Object.defineProperty(ThfToolbarNotificationComponent.prototype, "notificationNumber", {
        get: /**
         * @return {?}
         */
        function () {
            return this._notificationNumber;
        },
        /** Define o número de notificações. */
        set: /**
         * Define o número de notificações.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._notificationNumber = Number.isInteger(value) ? value : 0;
        },
        enumerable: true,
        configurable: true
    });
    ThfToolbarNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-toolbar-notification', template: "<div class=\"thf-toolbar-notification thf-clickable\" (click)=\"popup.toggle()\"> <span #notification class=\"thf-icon thf-icon-notification thf-toolbar-icon\"></span> <div *ngIf=\"notificationNumber\" class=\"thf-toolbar-notification-badge\"> {{ notificationNumber }} </div> </div> <thf-popup #popup [t-actions]=\"notificationActions\" [t-target]=\"notification\"> </thf-popup> ",
                    providers: [ThfControlPositionService]
                },] },
    ];
    ThfToolbarNotificationComponent.propDecorators = {
        notificationActions: [{ type: Input, args: ['t-notification-actions',] }],
        notificationNumber: [{ type: Input, args: ['t-notification-number',] }]
    };
    return ThfToolbarNotificationComponent;
}());
export { ThfToolbarNotificationComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfToolbarNotificationComponent.prototype._notificationNumber;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    ThfToolbarNotificationComponent.prototype.notificationActions;
}
