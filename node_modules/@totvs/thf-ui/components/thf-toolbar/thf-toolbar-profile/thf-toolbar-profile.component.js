/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';
/** @type {?} */
var thfToolbarProfileDefaultAvatar = './assets/images/totvs-logo-user.svg';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfToolbarProfileComponent
 *
 * \@description
 *
 * Componente `thf-toolbar-profile`.
 */
var ThfToolbarProfileComponent = /** @class */ (function () {
    function ThfToolbarProfileComponent() {
        this.defaultAvatar = thfToolbarProfileDefaultAvatar;
    }
    ThfToolbarProfileComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-toolbar-profile', template: "<div #profileElement class=\"thf-toolbar-profile thf-clickable\" (click)=\"popup.toggle()\"> <ng-container *ngIf=\"profile.avatar; then avatar; else userIcon\"></ng-container> </div> <thf-popup #popup [t-actions]=\"profileActions\" [t-target]=\"profileElement\"> <div t-popup-header-template *ngIf=\"profile?.title\" class=\"thf-toolbar-profile-item-header\"> <thf-avatar class=\"thf-toolbar-profile-item-avatar\" t-size=\"sm\" [t-src]=\"profile.avatar || defaultAvatar\"> </thf-avatar> <div> <div class=\"thf-toolbar-profile-item-header-title\"> {{ profile.title }} </div> <div *ngIf=\"profile.subtitle\" class=\"thf-toolbar-profile-item-header-subtitle\"> {{ profile.subtitle }} </div> </div> </div> </thf-popup> <ng-template #avatar> <thf-avatar t-size=\"xs\" [t-src]=\"profile.avatar\"></thf-avatar> </ng-template> <ng-template #userIcon> <span class=\"thf-icon thf-icon-user thf-toolbar-icon\"></span> </ng-template> ",
                    providers: [ThfControlPositionService]
                },] },
    ];
    ThfToolbarProfileComponent.propDecorators = {
        profile: [{ type: Input, args: ['t-profile',] }],
        profileActions: [{ type: Input, args: ['t-profile-actions',] }]
    };
    return ThfToolbarProfileComponent;
}());
export { ThfToolbarProfileComponent };
if (false) {
    /**
     * Objeto que implementa a interface `ThfToolbarProfile`.
     * @type {?}
     */
    ThfToolbarProfileComponent.prototype.profile;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    ThfToolbarProfileComponent.prototype.profileActions;
    /** @type {?} */
    ThfToolbarProfileComponent.prototype.defaultAvatar;
}
