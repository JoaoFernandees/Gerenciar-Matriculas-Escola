var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewContainerRef } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { ThfToolbarBaseComponent } from './thf-toolbar-base.component';
/**
 * \@docsExtends ThfToolbarBaseComponent
 *
 * \@example
 *
 * <example name="thf-toolbar-basic" title="Totvs Toolbar Basic">
 *  <file name="sample-thf-toolbar-basic/sample-thf-toolbar-basic.component.html"> </file>
 *  <file name="sample-thf-toolbar-basic/sample-thf-toolbar-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-toolbar-labs" title="Totvs Toolbar Labs">
 *  <file name="sample-thf-toolbar-labs/sample-thf-toolbar-labs.component.html"> </file>
 *  <file name="sample-thf-toolbar-labs/sample-thf-toolbar-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-toolbar-logged" title="Totvs Toolbar - Logged">
 *  <file name="sample-thf-toolbar-logged/sample-thf-toolbar-logged.component.html"> </file>
 *  <file name="sample-thf-toolbar-logged/sample-thf-toolbar-logged.component.ts"> </file>
 * </example>
 */
var ThfToolbarComponent = /** @class */ (function (_super) {
    __extends(ThfToolbarComponent, _super);
    function ThfToolbarComponent(titleService, viewRef) {
        var _this = _super.call(this) || this;
        _this.titleService = titleService;
        _this.parentRef = viewRef['_view']['component'];
        return _this;
    }
    /**
     * @return {?}
     */
    ThfToolbarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setTitle(this.title);
    };
    /**
     * @private
     * @param {?} newTitle
     * @return {?}
     */
    ThfToolbarComponent.prototype.setTitle = /**
     * @private
     * @param {?} newTitle
     * @return {?}
     */
    function (newTitle) {
        this.titleService.setTitle(newTitle);
    };
    ThfToolbarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-toolbar', template: "<div class=\"thf-toolbar\"> <div class=\"thf-toolbar-title\"> {{title}} </div> <div class=\"thf-toolbar-group-icon\"> <thf-toolbar-actions *ngIf=\"actions && actions.length\" [t-actions]=\"actions\" [t-actions-icon]=\"actionsIcon\"> </thf-toolbar-actions> <thf-toolbar-notification *ngIf=\"showNotification && notificationActions\" [t-notification-actions]=\"notificationActions\" [t-notification-number]=\"notificationNumber\"> </thf-toolbar-notification> <thf-toolbar-profile *ngIf=\"isShowProfile\" [t-profile]=\"profile || { avatar: userSrc, title: userName }\" [t-profile-actions]=\"profileActions || userActions\"> </thf-toolbar-profile> </div> </div> "
                },] },
    ];
    /** @nocollapse */
    ThfToolbarComponent.ctorParameters = function () { return [
        { type: Title },
        { type: ViewContainerRef }
    ]; };
    return ThfToolbarComponent;
}(ThfToolbarBaseComponent));
export { ThfToolbarComponent };
if (false) {
    /** @type {?} */
    ThfToolbarComponent.prototype.parentRef;
    /**
     * @type {?}
     * @private
     */
    ThfToolbarComponent.prototype.titleService;
}
