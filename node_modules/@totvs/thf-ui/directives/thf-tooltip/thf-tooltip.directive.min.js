var __extends=this&&this.__extends||function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function i(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}();import{Directive,ElementRef,HostListener,Renderer2}from"@angular/core";import{ThfControlPositionService}from"./../../services/thf-control-position/thf-control-position.service";import{ThfTooltipBaseDirective}from"./thf-tooltip-base.directive";var ThfTooltipDirective=function(t){function e(e,o,i){var n=t.call(this)||this;return n.elementRef=e,n.renderer=o,n.thfControlPosition=i,n.tooltipOffset=8,n}return __extends(e,t),e.prototype.ngOnInit=function(){this.initScrollEventListenerFunction()},e.prototype.onMouseEnter=function(){var t=this;setTimeout(function(){t.tooltip&&(t.tooltipContent?t.showTooltip():t.createTooltip(),t.removeArrow(t.arrowDirection),t.thfControlPosition.adjustPosition(t.tooltipPosition),t.arrowDirection=t.thfControlPosition.getArrowDirection(),t.addArrow(t.arrowDirection),t.lastTooltipText=t.tooltip)})},e.prototype.onMouseLeave=function(){this.hideTooltip()},e.prototype.addArrow=function(t){this.renderer.addClass(this.divArrow,"thf-arrow-"+t)},e.prototype.addScrollEventListener=function(){window.addEventListener("scroll",this.eventListenerFunction,!0)},e.prototype.createTooltip=function(){this.tooltipContent=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipContent,"thf-tooltip"),this.divArrow=this.renderer.createElement("div"),this.renderer.addClass(this.divArrow,"thf-tooltip-arrow"),this.divContent=this.renderer.createElement("div"),this.renderer.addClass(this.divContent,"thf-tooltip-content"),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent),this.renderer.appendChild(this.tooltipContent,this.divArrow),this.renderer.appendChild(this.tooltipContent,this.divContent),this.renderer.appendChild(this.elementRef.nativeElement,this.tooltipContent),this.thfControlPosition.setElements(this.tooltipContent,this.tooltipOffset,this.elementRef),this.addScrollEventListener()},e.prototype.initScrollEventListenerFunction=function(){var t=this;this.eventListenerFunction=function(){t.isHidden||setTimeout(function(){t.thfControlPosition.adjustPosition(t.tooltipPosition)})}},e.prototype.hideTooltip=function(){this.tooltipContent&&(this.renderer.addClass(this.tooltipContent,"thf-invisible"),this.isHidden=!0,this.removeScrollEventListener())},e.prototype.removeArrow=function(t){this.elementRef.nativeElement.querySelector(".thf-arrow-"+t)&&this.renderer.removeClass(this.divArrow,"thf-arrow-"+t)},e.prototype.removeScrollEventListener=function(){window.removeEventListener("scroll",this.eventListenerFunction,!0)},e.prototype.showTooltip=function(){this.renderer.removeClass(this.tooltipContent,"thf-invisible"),this.updateTextContent(),this.isHidden=!1,this.addScrollEventListener()},e.prototype.updateTextContent=function(){this.lastTooltipText!==this.tooltip&&(this.renderer.removeChild(this.divContent,this.textContent),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent))},e.decorators=[{type:Directive,args:[{selector:"[t-tooltip]",providers:[ThfControlPositionService]}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ThfControlPositionService}]},e.propDecorators={onMouseEnter:[{type:HostListener,args:["mouseenter"]}],onMouseLeave:[{type:HostListener,args:["mouseleave"]}]},e}(ThfTooltipBaseDirective);export{ThfTooltipDirective};