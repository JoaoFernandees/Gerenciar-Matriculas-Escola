var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfHttpInterceptorBaseService } from './thf-http-interceptor-base.service';
import { ThfNotificationService } from './../../services/thf-notification/thf-notification.service';
import { ThfDialogService } from './../../services/thf-dialog/thf-dialog.service';
/**
 * \@docsExtends ThfHttpInterceptorBaseService
 *
 * \@example
 * <example name='thf-http-interceptor-labs' title='Totvs Http Interceptor Labs'>
 *  <file name='sample-thf-http-interceptor-labs.component.ts'> </file>
 *  <file name='sample-thf-http-interceptor-labs.component.html'> </file>
 * </example>
 */
var ThfHttpInterceptorService = /** @class */ (function (_super) {
    __extends(ThfHttpInterceptorService, _super);
    function ThfHttpInterceptorService(notification, dialog) {
        return _super.call(this, notification, dialog) || this;
    }
    ThfHttpInterceptorService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ThfHttpInterceptorService.ctorParameters = function () { return [
        { type: ThfNotificationService },
        { type: ThfDialogService }
    ]; };
    return ThfHttpInterceptorService;
}(ThfHttpInterceptorBaseService));
export { ThfHttpInterceptorService };
