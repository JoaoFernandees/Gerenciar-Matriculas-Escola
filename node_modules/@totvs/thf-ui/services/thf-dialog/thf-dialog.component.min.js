var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var o,e=1,i=arguments.length;e<i;e++)for(var n in o=arguments[e])Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n]);return t}).apply(this,arguments)};import{Component,ViewChild}from"@angular/core";import{browserLanguage,thfLocaleDefault}from"../../utils/util";import{ThfDialogType}from"./thf-dialog.enum";import{ThfModalComponent}from"../../components/thf-modal/thf-modal.component";export var thfDialogAlertLiteralsDefault={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"}};export var thfDialogConfirmLiteralsDefault={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"}};var ThfDialogComponent=function(){function t(){this.primaryAction={label:"ok",action:function(){}}}return t.prototype.ngOnDestroy=function(){this.closeSubscription.unsubscribe()},t.prototype.ngOnInit=function(){var t=this;this.closeSubscription=this.thfModal.onXClosed.subscribe(function(o){return t.destroy()})},t.prototype.close=function(){this.thfModal.close(),this.destroy()},t.prototype.destroy=function(){this.componentRef&&this.componentRef.destroy()},t.prototype.configDialog=function(t,o,e,i){var n=this;this.primaryAction={label:t,action:function(){o&&o(),n.close()}},e&&(this.secondaryAction={label:e,action:function(){i&&i(),n.close()}})},t.prototype.open=function(t,o,e){switch(this.title=t.title,this.message=t.message,this.componentRef=e,this.setDialogLiterals(t,o),o){case ThfDialogType.Confirm:this.configDialog(this.literalsConfirm.confirm,t.confirm,this.literalsConfirm.cancel,t.cancel);break;case ThfDialogType.Alert:this.configDialog(this.literalsAlert.ok,t.ok)}this.thfModal.open()},t.prototype.setDialogLiterals=function(t,o){var e=thfDialogAlertLiteralsDefault,i=thfDialogConfirmLiteralsDefault,n=t.literals;o===ThfDialogType.Alert?this.literalsAlert=__assign({},e[thfLocaleDefault],e[browserLanguage()],n):this.literalsConfirm=__assign({},i[thfLocaleDefault],i[browserLanguage()],n)},t.decorators=[{type:Component,args:[{template:'<thf-modal [t-title]="title" [t-primary-action]="primaryAction" [t-secondary-action]="secondaryAction"> {{ message }} </thf-modal> '}]}],t.propDecorators={thfModal:[{type:ViewChild,args:[ThfModalComponent]}]},t}();export{ThfDialogComponent};